<root>
    <item name='kotlin.reflect.jvm.internal.impl.utils.addToStdlib.AddToStdlibKt T constant(kotlin.jvm.functions.Function0&lt;? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.utils.addToStdlib.AddToStdlibKt R firstNotNullResult(java.lang.Iterable&lt;? extends T&gt;, kotlin.jvm.functions.Function1&lt;? super T,? extends R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.utils.addToStdlib.AddToStdlibKt kotlin.sequences.Sequence&lt;T&gt; sequenceOfLazyValues(kotlin.jvm.functions.Function0&lt;? extends T&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.utils.addToStdlib.AddToStdlibKt T constant(kotlin.jvm.functions.Function0&lt;? extends T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.utils.addToStdlib.AddToStdlibKt T check(T, kotlin.jvm.functions.Function1&lt;? super T,java.lang.Boolean&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.utils.addToStdlib.AddToStdlibKt java.util.List&lt;T&gt; singletonOrEmptyList(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.utils.addToStdlib.AddToStdlibKt java.util.Set&lt;T&gt; singletonOrEmptySet(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.utils.addToStdlib.AddToStdlibKt kotlin.sequences.Sequence&lt;T&gt; sequenceOfLazyValues(kotlin.jvm.functions.Function0&lt;? extends T&gt;...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.utils.addToStdlib.AddToStdlibKt java.util.List&lt;T&gt; singletonList(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.utils.addToStdlib.AddToStdlibKt R firstNotNullResult(java.lang.Iterable&lt;? extends T&gt;, kotlin.jvm.functions.Function1&lt;? super T,? extends R&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.utils.addToStdlib.AddToStdlibKt kotlin.Pair&lt;T2,T1&gt; swap(kotlin.Pair&lt;? extends T1,? extends T2&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.utils.addToStdlib.AddToStdlibKt kotlin.Pair&lt;T2,T1&gt; swap(kotlin.Pair&lt;? extends T1,? extends T2&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
