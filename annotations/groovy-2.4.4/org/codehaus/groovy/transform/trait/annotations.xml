<root>
    <item
        name='org.codehaus.groovy.transform.trait.Traits boolean isAnnotatedWithTrait(org.codehaus.groovy.ast.ClassNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.transform.trait.TraitComposer void doExtendTraits(org.codehaus.groovy.ast.ClassNode, org.codehaus.groovy.control.SourceUnit, org.codehaus.groovy.control.CompilationUnit) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.transform.trait.Traits TRAIT_CLASS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.transform.trait.Traits org.codehaus.groovy.ast.ClassNode findHelper(org.codehaus.groovy.ast.ClassNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.transform.trait.Traits STATIC_THIS_OBJECT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.transform.trait.Traits java.lang.reflect.Method getBridgeMethodTarget(java.lang.reflect.Method) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.transform.trait.Traits org.codehaus.groovy.ast.ClassNode findFieldHelper(org.codehaus.groovy.ast.ClassNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.transform.trait.Traits boolean hasDefaultImplementation(org.codehaus.groovy.ast.MethodNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.transform.trait.Traits java.lang.String[] decomposeSuperCallName(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.transform.trait.Traits boolean hasDefaultImplementation(java.lang.reflect.Method) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.transform.trait.Traits boolean isBridgeMethod(java.lang.reflect.Method) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.transform.trait.Traits java.util.LinkedHashSet&lt;org.codehaus.groovy.ast.ClassNode&gt; collectAllInterfacesReverseOrder(org.codehaus.groovy.ast.ClassNode, java.util.LinkedHashSet&lt;org.codehaus.groovy.ast.ClassNode&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.transform.trait.TraitASTTransformation void visit(org.codehaus.groovy.ast.ASTNode[], org.codehaus.groovy.control.SourceUnit) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.transform.trait.Traits THIS_OBJECT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.transform.trait.TraitASTTransformation void visit(org.codehaus.groovy.ast.ASTNode[], org.codehaus.groovy.control.SourceUnit) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
</root>
