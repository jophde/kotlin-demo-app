<root>
    <item name='org.junit.internal.matchers.IsCollectionContaining boolean matchesSafely(java.lang.Iterable&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.junit.internal.matchers.StringContains org.hamcrest.Matcher&lt;java.lang.String&gt; containsString(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.junit.internal.matchers.IsCollectionContaining boolean matchesSafely(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.junit.internal.matchers.CombinableMatcher org.junit.internal.matchers.CombinableMatcher&lt;T&gt; or(org.hamcrest.Matcher&lt;? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.junit.internal.matchers.IsCollectionContaining void describeTo(org.hamcrest.Description) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.junit.internal.matchers.TypeSafeMatcher boolean matchesSafely(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.junit.internal.matchers.SubstringMatcher void describeTo(org.hamcrest.Description) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.junit.internal.matchers.SubstringMatcher java.lang.String relationship()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.junit.internal.matchers.IsCollectionContaining org.hamcrest.Matcher&lt;java.lang.Iterable&lt;T&gt;&gt; hasItem(org.hamcrest.Matcher&lt;? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.junit.internal.matchers.SubstringMatcher boolean matchesSafely(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.junit.internal.matchers.SubstringMatcher boolean evalSubstringOf(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.junit.internal.matchers.IsCollectionContaining org.hamcrest.Matcher&lt;java.lang.Iterable&lt;T&gt;&gt; hasItems(T...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.junit.internal.matchers.CombinableMatcher void describeTo(org.hamcrest.Description) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.junit.internal.matchers.StringContains java.lang.String relationship()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.junit.internal.matchers.CombinableMatcher org.junit.internal.matchers.CombinableMatcher&lt;T&gt; and(org.hamcrest.Matcher&lt;? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.junit.internal.matchers.IsCollectionContaining org.hamcrest.Matcher&lt;java.lang.Iterable&lt;T&gt;&gt; hasItem(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.junit.internal.matchers.IsCollectionContaining org.hamcrest.Matcher&lt;java.lang.Iterable&lt;T&gt;&gt; hasItems(org.hamcrest.Matcher&lt;? extends T&gt;...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.junit.internal.matchers.Each org.hamcrest.Matcher&lt;java.lang.Iterable&lt;T&gt;&gt; each(org.hamcrest.Matcher&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.junit.internal.matchers.StringContains boolean evalSubstringOf(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
