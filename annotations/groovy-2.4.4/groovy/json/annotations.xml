<root>
    <item name='groovy.json.JsonParserType INDEX_OVERLAY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.StreamingJsonBuilder java.lang.Object call(java.util.Collection, groovy.lang.Closure) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.JsonDelegate java.util.Map&lt;java.lang.String,java.lang.Object&gt; curryDelegateAndGetContent(groovy.lang.Closure&lt;?&gt;, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonTokenType TRUE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonTokenType STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonSlurper java.lang.Object parseText(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonSlurperClassic java.lang.Object parseText(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonTokenType OPEN_BRACKET'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonBuilder java.lang.String toPrettyString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonOutput java.lang.String toJson(groovy.lang.Closure)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.JsonSlurperClassic java.lang.Object parse(java.net.URL, java.util.Map, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonSlurper groovy.json.JsonSlurper setCheckDates(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonOutput java.lang.String prettyPrint(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.JsonSlurperClassic java.lang.Object parse(java.io.File, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.JsonSlurper java.lang.Object parse(java.io.InputStream, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonTokenType NULL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonParser java.lang.Object parse(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='groovy.json.JsonBuilder java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.StringEscapeUtils void escapeJavaScript(java.io.Writer, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonParser java.lang.Object parse(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovy.json.JsonSlurperClassic java.lang.Object parse(java.net.URL, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonSlurperClassic java.lang.Object parse(java.io.File)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonOutput java.lang.String toJson(java.lang.Character)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonSlurper groovy.json.JsonSlurper setMaxSizeForInMemory(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonTokenType COMMA'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonSlurper java.lang.Object parse(java.io.File, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonParserType CHARACTER_SOURCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.JsonSlurper java.lang.Object parse(java.io.InputStream, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.StringEscapeUtils void unescapeJavaScript(java.io.Writer, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonParserType CHAR_BUFFER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonTokenType OPEN_CURLY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonSlurperClassic java.lang.Object parse(java.io.Reader)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.StreamingJsonBuilder java.lang.Object call(groovy.lang.Closure) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.StringEscapeUtils void escapeJava(java.io.Writer, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonTokenType CLOSE_BRACKET'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonOutput java.lang.String toJson(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonOutput java.lang.String toJson(java.lang.Boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonOutput java.lang.String toJson(java.util.UUID)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonTokenType FALSE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonBuilder java.lang.Object call(java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonSlurper java.lang.Object parse(byte[], java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonSlurper groovy.json.JsonSlurper setLazyChop(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonTokenType CLOSE_CURLY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonBuilder java.io.Writer writeTo(java.io.Writer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.StreamingJsonBuilder java.lang.Object invokeMethod(java.lang.String, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonSlurper java.lang.Object parse(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonOutput java.lang.String toJson(java.util.Date)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonOutput java.lang.String toJson(java.lang.Number)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonOutput java.lang.String toJson(java.util.Map)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonSlurper java.lang.Object parse(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonSlurper java.lang.Object parse(byte[], java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonSlurper groovy.json.JsonSlurper setChop(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonSlurper java.lang.Object parse(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonSlurperClassic java.lang.Object parse(java.net.URL)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonOutput java.lang.String toJson(java.util.Calendar)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonOutput java.lang.String toJson(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonSlurper java.lang.Object parse(java.io.Reader) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonSlurperClassic java.lang.Object parse(java.net.URL, java.util.Map)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonOutput java.lang.String toJson(java.net.URL)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.JsonSlurper groovy.json.JsonSlurper setType(groovy.json.JsonParserType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonTokenType COLON'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonOutput java.lang.String toJson(groovy.util.Expando)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.JsonSlurperClassic java.lang.Object parse(java.util.Map, java.net.URL, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonOutput java.lang.String prettyPrint(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.StringEscapeUtils void unescapeJava(java.io.Writer, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonSlurperClassic java.lang.Object parse(java.util.Map, java.net.URL)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.JsonDelegate java.util.Map&lt;java.lang.String,java.lang.Object&gt; cloneDelegateAndGetContent(groovy.lang.Closure&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonSlurper java.lang.Object parse(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonParserType LAX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonBuilder java.lang.Object call(groovy.lang.Closure) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonSlurperClassic java.lang.Object parseText(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.JsonTokenType NUMBER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
