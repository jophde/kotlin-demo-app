<root>
    <item
        name='groovyx.gpars.dataflow.ProcessingNode groovyx.gpars.dataflow.operator.DataflowProcessor operator(groovyx.gpars.group.PGroup)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void into(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(java.util.List&lt;groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel void separate(groovyx.gpars.group.PGroup, java.util.List&lt;groovyx.gpars.dataflow.DataflowWriteChannel&lt;?&gt;&gt;, groovy.lang.Closure&lt;java.util.List&lt;java.lang.Object&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel void whenBound(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='groovyx.gpars.dataflow.KanbanFlow groovy.lang.Closure inverse(groovy.lang.Closure)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void split(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; tap(groovyx.gpars.group.PGroup, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.SyncDataflowVariable void scheduleCallback(java.lang.Object, groovyx.gpars.actor.impl.MessageStream) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovyx.gpars.scheduler.Pool, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;java.lang.Boolean&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel void whenBound(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Promise groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;V&gt;, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.SyncDataflowVariable groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.group.PGroup, java.util.List&lt;groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;&gt;, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void whenBound(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.operator.DataflowProcessor splitter(groovyx.gpars.dataflow.DataflowReadChannel, java.util.List&lt;groovyx.gpars.dataflow.DataflowWriteChannel&gt;, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; tap(groovyx.gpars.scheduler.Pool, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; tap(groovyx.gpars.group.PGroup, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(java.util.List&lt;groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel void into(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.SyncDataflowVariable groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.group.PGroup, java.util.List&lt;groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.SyncDataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; tap(groovyx.gpars.group.PGroup, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.scheduler.Pool, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void getValAsync(java.lang.Object, groovyx.gpars.actor.impl.MessageStream) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Select groovyx.gpars.dataflow.SelectResult&lt;T&gt; prioritySelect()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.SyncDataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.SyncDataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; tap(groovyx.gpars.group.PGroup, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; lazyTask(groovy.lang.Closure&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovy.lang.Closure&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void split(groovyx.gpars.group.PGroup, java.util.List&lt;groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; tap(groovyx.gpars.group.PGroup, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Select groovyx.gpars.dataflow.SelectResult&lt;T&gt; select()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(java.util.Map&lt;java.lang.String,java.lang.Object&gt;, java.util.List&lt;groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void split(groovyx.gpars.group.PGroup, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.KanbanLink groovyx.gpars.dataflow.ProcessingNode pfaccess$1(groovyx.gpars.dataflow.KanbanLink) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.operator.DataflowProcessor prioritySelector(java.util.Map, groovy.lang.Closure) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.SyncDataflowVariable T getVal(long, java.util.concurrent.TimeUnit) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void whenBound(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Select groovyx.gpars.dataflow.SelectResult&lt;T&gt; call(java.util.List&lt;java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Select groovyx.gpars.dataflow.Promise&lt;groovyx.gpars.dataflow.SelectResult&lt;T&gt;&gt; selectToPromise(java.util.List&lt;java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void wheneverBound(groovyx.gpars.actor.impl.MessageStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.LazyDataflowVariable T getVal(long, java.util.concurrent.TimeUnit) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Select Select(groovyx.gpars.group.PGroup, java.util.List&lt;groovyx.gpars.dataflow.SelectableChannel&lt;? extends T&gt;&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void binaryChoice(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;, groovy.lang.Closure&lt;java.lang.Boolean&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.Promise&lt;V&gt; rightShift(groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Promise groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;V&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel void split(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.scheduler.Pool, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.operator.DataflowProcessor operator(groovyx.gpars.dataflow.DataflowReadChannel, groovyx.gpars.dataflow.DataflowWriteChannel, groovy.lang.Closure) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.operator.DataflowProcessor prioritySelector(java.util.Map, groovy.lang.Closure) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void whenBound(groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel void binaryChoice(groovyx.gpars.group.PGroup, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;, groovy.lang.Closure&lt;java.lang.Boolean&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.scheduler.Pool, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel void split(groovyx.gpars.group.PGroup, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowVariable groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovy.lang.Closure&lt;V&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void choice(groovyx.gpars.group.PGroup, java.util.List&lt;groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;&gt;, groovy.lang.Closure&lt;java.lang.Integer&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.operator.DataflowProcessor operator(java.util.Map, groovy.lang.Closure) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowVariable groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovy.lang.Closure&lt;V&gt;, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; tap(groovyx.gpars.scheduler.Pool, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(java.util.Map&lt;java.lang.String,java.lang.Object&gt;, java.util.List&lt;groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.LazyDataflowVariable LazyDataflowVariable(groovy.lang.Closure&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.operator.DataflowProcessor operator(java.util.List, java.util.List, int, groovy.lang.Closure) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.SyncDataflowBroadcast groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; createReadChannel()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.scheduler.Pool, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, java.util.List&lt;groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel void getValAsync(groovyx.gpars.actor.impl.MessageStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.LazyDataflowVariable groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.group.PGroup, groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Select groovyx.gpars.dataflow.SelectResult&lt;T&gt; prioritySelect(java.util.List&lt;java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, java.util.List&lt;groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;&gt;, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.KanbanLink groovyx.gpars.dataflow.KanbanLink to(groovyx.gpars.dataflow.ProcessingNode)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.scheduler.Pool, java.util.List&lt;groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.SyncDataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.group.PGroup, java.util.List&lt;groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.SyncDataflowVariable groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;java.lang.Boolean&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;java.lang.Boolean&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;java.lang.Boolean&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.group.PGroup, java.util.List&lt;groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.operator.DataflowProcessor splitter(groovyx.gpars.dataflow.DataflowReadChannel, java.util.List&lt;groovyx.gpars.dataflow.DataflowWriteChannel&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; tap(groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='groovyx.gpars.dataflow.Dataflow DATA_FLOW_GROUP'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovy.lang.Closure&lt;T&gt;, groovy.lang.Closure&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.scheduler.Pool, java.util.List&lt;groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.scheduler.Pool, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, java.util.List&lt;groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Select groovyx.gpars.dataflow.Promise&lt;groovyx.gpars.dataflow.SelectResult&lt;T&gt;&gt; prioritySelectToPromise(java.util.List&lt;java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel void choice(groovyx.gpars.group.PGroup, java.util.List&lt;groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;&gt;, groovy.lang.Closure&lt;java.lang.Integer&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;java.lang.Boolean&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowVariable groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Select&lt;?&gt; select(java.util.List&lt;groovyx.gpars.dataflow.SelectableChannel&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; tap(groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.operator.DataflowProcessor splitter(groovyx.gpars.dataflow.DataflowReadChannel, java.util.List&lt;groovyx.gpars.dataflow.DataflowWriteChannel&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataCallbackWithPool groovyx.gpars.actor.impl.MessageStream send(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;java.lang.Boolean&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovy.lang.Closure&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovyx.gpars.dataflow.DataflowChannelListener void onMessage(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.operator.DataflowProcessor operator(java.util.List, java.util.List, groovy.lang.Closure) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.SelectableChannel void wheneverBound(groovyx.gpars.actor.impl.MessageStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(java.util.List&lt;groovyx.gpars.dataflow.Promise&gt;, groovy.lang.Closure&lt;T&gt;, groovy.lang.Closure&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.operator.DataflowProcessor splitter(groovyx.gpars.dataflow.DataflowReadChannel, java.util.List&lt;groovyx.gpars.dataflow.DataflowWriteChannel&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovy.lang.Closure&lt;java.lang.Boolean&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataCallbackWithPool DataCallbackWithPool(groovyx.gpars.scheduler.Pool, groovy.lang.Closure) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void wheneverBound(groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Promise groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovy.lang.Closure&lt;V&gt;, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;java.lang.Boolean&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowVariable&lt;T&gt; createVariable()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowWriteChannel groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt; leftShift(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.LazyDataflowVariable LazyDataflowVariable(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; tap(groovyx.gpars.scheduler.Pool, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;java.lang.Boolean&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.group.PGroup, java.util.List&lt;groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.SyncDataflowVariable groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; tap(groovyx.gpars.group.PGroup, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void separate(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, java.util.List&lt;groovyx.gpars.dataflow.DataflowWriteChannel&lt;?&gt;&gt;, groovy.lang.Closure&lt;java.util.List&lt;java.lang.Object&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(java.util.List&lt;groovyx.gpars.dataflow.Promise&gt;, groovy.lang.Closure&lt;T&gt;, groovy.lang.Closure&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; lazyTask(groovy.lang.Closure&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;java.lang.Boolean&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowVariable groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt; leftShift(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; tap(groovyx.gpars.group.PGroup, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.ProcessingNode groovyx.gpars.dataflow.ProcessingNode node(groovy.lang.Closure)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataCallbackWithPool DataCallbackWithPool(groovyx.gpars.scheduler.Pool, groovy.lang.Closure) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowVariable groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;V&gt;, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataCallback groovyx.gpars.actor.impl.MessageStream send(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovyx.gpars.scheduler.Pool, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;java.lang.Boolean&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt; leftShift(groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel void separate(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, java.util.List&lt;groovyx.gpars.dataflow.DataflowWriteChannel&lt;?&gt;&gt;, groovy.lang.Closure&lt;java.util.List&lt;java.lang.Object&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowVariable java.lang.Class&lt;groovyx.gpars.dataflow.DataflowVariable.RemoteDataflowVariable&gt; getRemoteClass()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowWriteChannel groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt; leftShift(groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.SyncDataflowVariable groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.LazyDataflowVariable LazyDataflowVariable(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;java.lang.Boolean&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.LazyDataflowVariable groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;V&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.group.PGroup, groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(groovyx.gpars.dataflow.Promise, groovy.lang.Closure&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovy.lang.Closure&lt;T&gt;, groovy.lang.Closure&lt;T&gt;) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;java.lang.Boolean&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovy.lang.Closure&lt;java.lang.Boolean&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; tap(groovyx.gpars.scheduler.Pool, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void whenBound(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowVariable groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt; leftShift(groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.SyncDataflowQueue groovyx.gpars.dataflow.DataflowVariable&lt;T&gt; createVariable()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; or(groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.LazyDataflowVariable void getValAsync(groovyx.gpars.actor.impl.MessageStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel void split(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, java.util.List&lt;groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflows java.lang.Object invokeMethod(java.lang.String, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(java.util.List&lt;groovyx.gpars.dataflow.Promise&gt;, groovy.lang.Closure&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel void whenBound(groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.Promise&lt;V&gt; rightShift(groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Select groovyx.gpars.dataflow.Promise&lt;groovyx.gpars.dataflow.SelectResult&lt;T&gt;&gt; prioritySelectToPromise()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Select&lt;?&gt; select(groovyx.gpars.dataflow.SelectableChannel&lt;?&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataCallback DataCallback(groovy.lang.Closure, groovyx.gpars.group.PGroup) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void into(groovyx.gpars.group.PGroup, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.Promise&lt;V&gt; rightShift(groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel void whenBound(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.LazyDataflowVariable groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovy.lang.Closure&lt;V&gt;, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.SyncDataflowBroadcast void unsubscribeReadChannel(groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(java.util.List&lt;groovyx.gpars.dataflow.Promise&gt;, groovy.lang.Closure&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; or(groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Promise groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.scheduler.Pool, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovy.lang.Closure&lt;T&gt;) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovy.lang.Closure&lt;T&gt;, groovy.lang.Closure&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; tap(java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; or(groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel void whenBound(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void whenBound(groovyx.gpars.actor.impl.MessageStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataCallback DataCallback(groovy.lang.Closure, groovyx.gpars.group.PGroup) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; tap(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovyx.gpars.dataflow.Dataflow activeParallelGroup'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;java.lang.Boolean&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; tap(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Promise groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void choice(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, java.util.List&lt;groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;&gt;, groovy.lang.Closure&lt;java.lang.Integer&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.group.PGroup retrieveCurrentDFPGroup()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, java.util.List&lt;groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.scheduler.Pool, groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; task(groovy.lang.Closure&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.operator.DataflowProcessor prioritySelector(java.util.List, java.util.List, groovy.lang.Closure) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; tap(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.operator.DataflowProcessor prioritySelector(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(groovyx.gpars.dataflow.Promise, groovy.lang.Closure&lt;T&gt;, groovy.lang.Closure&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.operator.DataflowProcessor selector(java.util.Map, groovy.lang.Closure) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, java.util.List&lt;groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;&gt;, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Select groovyx.gpars.dataflow.SelectResult&lt;T&gt; select(java.util.List&lt;java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel void choice(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, java.util.List&lt;groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;&gt;, groovy.lang.Closure&lt;java.lang.Integer&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.LazyDataflowVariable groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovy.lang.Closure&lt;V&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(java.util.List&lt;groovyx.gpars.dataflow.Promise&gt;, groovy.lang.Closure&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovyx.gpars.dataflow.Select groovyx.gpars.dataflow.SelectResult&lt;T&gt; call()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; tap(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; task(groovy.lang.Closure&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovy.lang.Closure&lt;T&gt;, groovy.lang.Closure&lt;T&gt;) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue T getVal(long, java.util.concurrent.TimeUnit) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(groovyx.gpars.dataflow.Promise, groovy.lang.Closure&lt;T&gt;, groovy.lang.Closure&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.operator.DataflowProcessor selector(java.util.Map, groovy.lang.Closure) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovy.lang.Closure&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;java.lang.Boolean&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.SelectableChannel void wheneverBound(groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.scheduler.Pool, groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovyx.gpars.dataflow.DataflowQueue java.util.Iterator&lt;T&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel T getVal(long, java.util.concurrent.TimeUnit) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovy.lang.Closure&lt;T&gt;) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovy.lang.Closure&lt;java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel void whenBound(groovyx.gpars.actor.impl.MessageStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.scheduler.Pool, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; lazyTask(java.util.concurrent.Callable&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.LazyDataflowVariable void getValAsync(java.lang.Object, groovyx.gpars.actor.impl.MessageStream) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow java.lang.Object usingGroup(groovyx.gpars.group.PGroup, groovy.lang.Closure) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowBroadcast groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; createReadChannel()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Select groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.String&gt; createTimeout(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.Promise&lt;V&gt; rightShift(groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel void binaryChoice(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;, groovy.lang.Closure&lt;java.lang.Boolean&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.SyncDataflowVariable groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.group.PGroup, groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataCallbackWithPool groovyx.gpars.actor.impl.MessageStream send(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovy.lang.Closure&lt;java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;java.lang.Object&gt; task(java.lang.Runnable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void whenBound(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowVariable groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.SyncDataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.LazyDataflowVariable groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void binaryChoice(groovyx.gpars.group.PGroup, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;, groovy.lang.Closure&lt;java.lang.Boolean&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovy.lang.Closure&lt;T&gt;, groovy.lang.Closure&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.operator.DataflowProcessor selector(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, java.util.List&lt;groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.operator.DataflowProcessor selector(java.util.List, java.util.List, groovy.lang.Closure) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovy.lang.Closure&lt;T&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovyx.gpars.scheduler.Pool, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.SyncDataflowVariable groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; tap(groovyx.gpars.group.PGroup, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(groovyx.gpars.dataflow.Promise, groovy.lang.Closure&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflows java.lang.Object invokeMethod(java.lang.String, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.group.PGroup, groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovyx.gpars.dataflow.Select TIMEOUT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(groovyx.gpars.dataflow.Promise, groovyx.gpars.dataflow.Promise, groovy.lang.Closure&lt;T&gt;, groovy.lang.Closure&lt;T&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; or(groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; task(java.util.concurrent.Callable&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.group.PGroup, java.util.List&lt;groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;&gt;, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.SyncDataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; tap(java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void split(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, java.util.List&lt;groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.scheduler.Pool, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Promise&lt;T&gt; whenAllBound(java.util.List&lt;groovyx.gpars.dataflow.Promise&gt;, groovy.lang.Closure&lt;T&gt;, groovy.lang.Closure&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowWriteChannel groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt; leftShift(groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.Select&lt;?&gt; select(java.util.List&lt;groovyx.gpars.dataflow.SelectableChannel&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel void split(groovyx.gpars.group.PGroup, java.util.List&lt;groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.Promise groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovy.lang.Closure&lt;V&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt; leftShift(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.group.PGroup, java.util.List&lt;groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;&gt;, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowVariable groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;V&gt;, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel void into(groovyx.gpars.group.PGroup, groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Select groovyx.gpars.dataflow.Promise&lt;groovyx.gpars.dataflow.SelectResult&lt;T&gt;&gt; selectToPromise()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.Dataflow groovyx.gpars.dataflow.operator.DataflowProcessor operator(groovyx.gpars.dataflow.DataflowReadChannel, groovyx.gpars.dataflow.DataflowWriteChannel, int, groovy.lang.Closure) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.group.PGroup, groovy.lang.Closure&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowVariable groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt; leftShift(groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void separate(groovyx.gpars.group.PGroup, java.util.List&lt;groovyx.gpars.dataflow.DataflowWriteChannel&lt;?&gt;&gt;, groovy.lang.Closure&lt;java.util.List&lt;java.lang.Object&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.KanbanLink groovyx.gpars.dataflow.ProcessingNode pfaccess$0(groovyx.gpars.dataflow.KanbanLink) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataCallback groovyx.gpars.actor.impl.MessageStream send(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue void getValAsync(groovyx.gpars.actor.impl.MessageStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel void getValAsync(java.lang.Object, groovyx.gpars.actor.impl.MessageStream) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowReadChannel groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt; filter(groovyx.gpars.scheduler.Pool, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; chainWith(groovyx.gpars.group.PGroup, java.util.Map&lt;java.lang.String,java.lang.Object&gt;, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.DataflowQueue groovyx.gpars.dataflow.DataflowWriteChannel&lt;T&gt; leftShift(groovyx.gpars.dataflow.DataflowReadChannel&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.SyncDataflowQueue groovyx.gpars.dataflow.DataflowReadChannel&lt;V&gt; merge(groovyx.gpars.group.PGroup, java.util.List&lt;groovyx.gpars.dataflow.DataflowReadChannel&lt;java.lang.Object&gt;&gt;, groovy.lang.Closure&lt;V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovyx.gpars.dataflow.LazyDataflowVariable groovyx.gpars.dataflow.Promise&lt;V&gt; then(groovyx.gpars.scheduler.Pool, groovy.lang.Closure&lt;V&gt;, groovy.lang.Closure&lt;V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
