<root>
    <item name='kotlin.reflect.jvm.internal.KProperty2Impl KProperty2Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty2Impl.Getter kotlin.reflect.jvm.internal.KPropertyImpl getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotated getAnnotated()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty DescriptorBasedProperty(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl java.lang.reflect.Method findDefaultMethod(java.lang.String, java.lang.String, boolean, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmPropertySignature.KotlinProperty kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeTable getTypeTable()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableImpl R callBy(java.util.Map&lt;kotlin.reflect.KParameter,? extends java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty1Impl.Setter Setter(kotlin.reflect.jvm.internal.KMutableProperty1Impl&lt;T,R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty1Impl.Setter kotlin.reflect.jvm.internal.KMutablePropertyImpl getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KMutableProperty0 mutableProperty0(kotlin.jvm.internal.MutablePropertyReference0) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl java.util.Collection&lt;kotlin.reflect.KCallable&lt;?&gt;&gt; getMembers()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.JvmStaticInObject JvmStaticInObject(java.lang.reflect.Method) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl.getMembers.visitor.1 kotlin.reflect.KCallable&lt;?&gt; visitConstructorDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor, kotlin.Unit) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor findPropertyDescriptor(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl KClassImpl(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.DefaultImpls java.util.List&lt;kotlin.reflect.KParameter&gt; getParameters(kotlin.reflect.jvm.internal.KPropertyImpl&lt;? extends R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty DescriptorBasedProperty(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller M getMember$kotlin_reflection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KClass createKotlinClass(java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl boolean access$isDeclared(kotlin.reflect.jvm.internal.KFunctionImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableImpl kotlin.reflect.KType getReturnType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ModuleByClassLoaderKt kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData getOrCreateModule(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KAnnotatedElementImpl kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotated getAnnotated()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty2Impl.Setter kotlin.reflect.KProperty getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl.getMembers.visitor.1 kotlin.reflect.KCallable&lt;?&gt; visitConstructorDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor, kotlin.Unit) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor&gt; getProperties(kotlin.reflect.jvm.internal.impl.name.Name) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty0Augmented KProperty0Augmented(kotlin.jvm.internal.PropertyReference0) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor findPropertyDescriptor(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty java.util.List&lt;kotlin.reflect.KParameter&gt; getParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl java.lang.Class&lt;T&gt; getJClass()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl kotlin.reflect.jvm.internal.KDeclarationContainerImpl access$getContainer$p(kotlin.reflect.jvm.internal.KFunctionImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl java.lang.Class&lt;?&gt; getJClass()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty0Impl kotlin.reflect.jvm.internal.KPropertyImpl.Getter getGetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionObjectRenderer java.lang.String renderType(kotlin.reflect.jvm.internal.impl.types.KotlinType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.DefaultImpls java.util.List&lt;java.lang.annotation.Annotation&gt; getAnnotations(kotlin.reflect.jvm.internal.KMutablePropertyImpl&lt;R&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty0Impl kotlin.reflect.jvm.internal.KMutableProperty0Impl.Setter&lt;R&gt; getSetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KParameterImpl kotlin.reflect.KParameter.Kind getKind()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty2Impl KProperty2Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.Constructor java.lang.Object call(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableImpl.DefaultImpls kotlin.reflect.KType getReturnType(kotlin.reflect.jvm.internal.KCallableImpl&lt;? extends R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectProperties.LazyVal LazyVal(kotlin.jvm.functions.Function0&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty0Impl kotlin.reflect.KProperty0.Getter getGetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.JvmStaticInObjectFieldSetter JvmStaticInObjectFieldSetter(java.lang.reflect.Field, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.DefaultImpls java.util.List&lt;java.lang.annotation.Annotation&gt; getAnnotations(kotlin.reflect.jvm.internal.KPropertyImpl&lt;? extends R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.JvmStaticInObjectFieldGetter void checkArguments(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.KotlinFunction KotlinFunction(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty DescriptorBasedProperty(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl java.lang.reflect.Method findDefaultMethod(java.lang.String, java.lang.String, boolean, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.DefaultImpls java.util.List&lt;java.lang.annotation.Annotation&gt; getAnnotations(kotlin.reflect.jvm.internal.KMutablePropertyImpl&lt;R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty1Impl java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionObjectRenderer java.lang.String renderCallable(kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KClass createKotlinClass(java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionObjectRenderer.WhenMappings $EnumSwitchMapping$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty2Impl.Getter Getter(kotlin.reflect.jvm.internal.KProperty2Impl&lt;D,E,? extends R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty2Impl KProperty2Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty2Impl.Setter kotlin.reflect.jvm.internal.KMutableProperty2Impl&lt;D,E,R&gt; getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.StaticFieldSetter StaticFieldSetter(java.lang.reflect.Field, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl kotlin.reflect.jvm.internal.impl.resolve.scopes.MemberScope getMemberScope$kotlin_reflection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty0Impl kotlin.reflect.jvm.internal.FunctionCaller&lt;?&gt; getCaller()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor&gt; getProperties(kotlin.reflect.jvm.internal.impl.name.Name)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.JavaConstructor java.lang.reflect.Constructor&lt;?&gt; getConstructor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl kotlin.reflect.jvm.internal.KDeclarationContainerImpl getContainer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.KotlinFunction java.lang.String getMethodDesc()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KParameterImpl java.util.List&lt;java.lang.annotation.Annotation&gt; getAnnotations()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionObjectRenderer java.lang.String renderCallable(kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl.getMembers.visitor.1 kotlin.reflect.KCallable&lt;?&gt; visitPropertyDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.Unit) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty1Impl kotlin.reflect.jvm.internal.KMutableProperty1Impl.Setter&lt;T,R&gt; getSetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.DefaultImpls java.util.List&lt;kotlin.reflect.KParameter&gt; getParameters(kotlin.reflect.jvm.internal.KPropertyImpl&lt;? extends R&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor getDescriptor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KMutableProperty0 mutableProperty0(kotlin.jvm.internal.MutablePropertyReference0)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty2Augmented java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KClass createKotlinClass(java.lang.Class, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty2Impl.Setter Setter(kotlin.reflect.jvm.internal.KMutableProperty2Impl&lt;D,E,R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableImpl.DefaultImpls kotlin.reflect.KType getReturnType(kotlin.reflect.jvm.internal.KCallableImpl&lt;? extends R&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl.Companion java.lang.Class access$getDEFAULT_CONSTRUCTOR_MARKER$p(kotlin.reflect.jvm.internal.KDeclarationContainerImpl.Companion) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ModuleByClassLoaderKt kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData getOrCreateModule(java.lang.Class&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl kotlin.sequences.Sequence&lt;kotlin.reflect.KCallable&lt;?&gt;&gt; getMembers(kotlin.reflect.jvm.internal.impl.resolve.scopes.MemberScope, boolean, boolean, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty2Impl KProperty2Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.Method Method(java.lang.reflect.Method, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl.getMembers.visitor.1 java.lang.Object visitConstructorDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty2Impl kotlin.reflect.jvm.internal.KMutablePropertyImpl.Setter getSetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl.getMembers.visitor.1 kotlin.reflect.KCallable&lt;?&gt; visitPropertyDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.Unit) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.DefaultImpls java.util.List&lt;java.lang.annotation.Annotation&gt; getAnnotations(kotlin.reflect.jvm.internal.KPropertyImpl&lt;? extends R&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.RuntimeTypeMapper kotlin.reflect.jvm.internal.impl.name.ClassId mapJvmClassToKotlinClassId(java.lang.Class&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.FieldGetter FieldGetter(java.lang.reflect.Field, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl java.lang.reflect.Constructor&lt;?&gt; findDefaultConstructor(java.lang.String, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassCacheKt kotlin.reflect.jvm.internal.KClassImpl&lt;T&gt; getOrCreateKotlinClass(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor getDescriptor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty2Impl java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty0Impl kotlin.reflect.jvm.internal.KProperty0Impl.Getter&lt;R&gt; getGetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor getDescriptor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.JavaMethod java.lang.String asString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.RuntimeTypeMapper kotlin.reflect.jvm.internal.JvmFunctionSignature mapSignature(kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty2Augmented java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectProperties.LazySoftVal LazySoftVal(T, kotlin.jvm.functions.Function0&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl java.lang.Object callBy(java.util.Map&lt;kotlin.reflect.KParameter,? extends java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty1FromReferenceImpl KMutableProperty1FromReferenceImpl(kotlin.jvm.internal.MutablePropertyReference1) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl java.util.List&lt;java.lang.annotation.Annotation&gt; getAnnotations()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableImpl java.util.List&lt;kotlin.reflect.KParameter&gt; getParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.EmptyContainerForLocal java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor&gt; getFunctions(kotlin.reflect.jvm.internal.impl.name.Name) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty2Impl.Getter kotlin.reflect.KProperty getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KTypeImpl kotlin.reflect.jvm.internal.impl.types.KotlinType getType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.JavaMethod java.lang.reflect.Method getMethod()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableImpl.DefaultImpls R call(kotlin.reflect.jvm.internal.KCallableImpl&lt;? extends R&gt;, java.lang.Object...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.ClassCompanionFieldGetter java.lang.Object call(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableImpl.DefaultImpls java.util.List&lt;java.lang.annotation.Annotation&gt; getAnnotations(kotlin.reflect.jvm.internal.KCallableImpl&lt;? extends R&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.DefaultImpls java.util.List&lt;kotlin.reflect.KParameter&gt; getParameters(kotlin.reflect.jvm.internal.KMutablePropertyImpl&lt;R&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty1Augmented java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.DefaultImpls kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotated getAnnotated(kotlin.reflect.jvm.internal.KMutablePropertyImpl&lt;R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.Setter java.util.List&lt;kotlin.reflect.KParameter&gt; getParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty0Impl.Setter kotlin.reflect.jvm.internal.KPropertyImpl getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty1Impl.Setter kotlin.reflect.jvm.internal.KMutableProperty1Impl&lt;T,R&gt; getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KTypeImpl java.lang.reflect.Type getJavaType$kotlin_reflection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.JvmStaticInObjectFieldGetter JvmStaticInObjectFieldGetter(java.lang.reflect.Field) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableImpl.DefaultImpls kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotated getAnnotated(kotlin.reflect.jvm.internal.KCallableImpl&lt;? extends R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty1Augmented java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl.getMembers.visitor.1 java.lang.Object visitFunctionDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor&gt; getProperties(kotlin.reflect.jvm.internal.impl.name.Name)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller void checkObjectInstance(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KParameterImpl kotlin.reflect.jvm.internal.KCallableImpl&lt;?&gt; getCallable()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor&gt; getFunctions(kotlin.reflect.jvm.internal.impl.name.Name)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.Constructor Constructor(java.lang.reflect.Constructor&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.Method java.lang.Object callMethod(java.lang.Object, java.lang.Object[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.RuntimeTypeMapper INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl kotlin.reflect.jvm.internal.impl.load.kotlin.reflect.RuntimeModuleData getModuleData()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty0Impl KMutableProperty0Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KAnnotatedElementImpl java.util.List&lt;java.lang.annotation.Annotation&gt; getAnnotations()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.BuiltInFunction java.lang.String asString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty0Impl.Getter Getter(kotlin.reflect.jvm.internal.KProperty0Impl&lt;? extends R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.Setter void callBy(java.util.Map&lt;kotlin.reflect.KParameter,? extends java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty0Impl KMutableProperty0Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KParameterImpl kotlin.reflect.KType getType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.FieldSetter FieldSetter(java.lang.reflect.Field, boolean, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.InstanceFieldGetter InstanceFieldGetter(java.lang.reflect.Field) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty R callBy(java.util.Map&lt;kotlin.reflect.KParameter,? extends java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl KPackageImpl(java.lang.Class&lt;?&gt;, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller FunctionCaller(M, java.lang.reflect.Type, java.lang.Class&lt;?&gt;, java.lang.reflect.Type[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.Setter java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty0Impl KMutableProperty0Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.DefaultImpls kotlin.reflect.KType getReturnType(kotlin.reflect.jvm.internal.KPropertyImpl&lt;? extends R&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.Getter kotlin.reflect.KType getReturnType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor&gt; getProperties(kotlin.reflect.jvm.internal.impl.name.Name) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.StaticMethod StaticMethod(java.lang.reflect.Method) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty2Impl KMutableProperty2Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.JavaMethod JavaMethod(java.lang.reflect.Method) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.KotlinConstructor java.lang.String asString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionObjectRenderer java.lang.String renderFunction(kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.Getter kotlin.reflect.jvm.internal.FunctionCaller&lt;?&gt; getCaller()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty0Impl.Getter kotlin.reflect.jvm.internal.KPropertyImpl getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty2Impl.Setter kotlin.reflect.jvm.internal.KPropertyImpl getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty1Impl kotlin.reflect.KMutableProperty.Setter getSetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl.getMembers.visitor.1 kotlin.reflect.KCallable&lt;?&gt; visitFunctionDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.Unit) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.EmptyContainerForLocal java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor&gt; getConstructorDescriptors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty2Impl kotlin.reflect.KProperty2.Getter getGetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty2Impl KMutableProperty2Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl KFunctionImpl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty1Impl kotlin.reflect.KProperty.Getter getGetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableImpl.DefaultImpls R callBy(kotlin.reflect.jvm.internal.KCallableImpl&lt;? extends R&gt;, java.util.Map&lt;kotlin.reflect.KParameter,? extends java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller java.util.List&lt;java.lang.reflect.Type&gt; getParameterTypes$kotlin_reflection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.RuntimeTypeMapper kotlin.reflect.jvm.internal.JvmFunctionSignature mapSignature(kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.EmptyContainerForLocal INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.DefaultImpls java.lang.String getName(kotlin.reflect.jvm.internal.KPropertyImpl&lt;? extends R&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectProperties.Val java.lang.Object escape(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.FieldGetter java.lang.Object call(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty java.util.List&lt;java.lang.annotation.Annotation&gt; getAnnotations()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty0Impl kotlin.reflect.KMutableProperty0.Setter getSetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionObjectRenderer java.lang.String renderProperty(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty1Augmented KProperty1Augmented(kotlin.jvm.internal.PropertyReference1) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.FieldSetter void checkArguments(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl KFunctionImpl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KProperty2 property2(kotlin.jvm.internal.PropertyReference2)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.BuiltInFunction.Predefined Predefined(java.lang.String, java.lang.reflect.Member) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.DefaultImpls kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotated getAnnotated(kotlin.reflect.jvm.internal.KMutablePropertyImpl&lt;R&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.KotlinFunction java.lang.String getSignature()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller void checkArguments(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller FunctionCaller(M, java.lang.reflect.Type, java.lang.Class&lt;?&gt;, java.lang.reflect.Type[]) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.Accessor kotlin.reflect.jvm.internal.impl.descriptors.PropertyAccessorDescriptor getDescriptor$kotlin_reflection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.StaticFieldGetter StaticFieldGetter(java.lang.reflect.Field) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.Getter R callBy(java.util.Map&lt;kotlin.reflect.KParameter,? extends java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.Setter kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor getDescriptor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl KFunctionImpl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionObjectRenderer java.lang.String renderParameter(kotlin.reflect.jvm.internal.KParameterImpl)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor&gt; getConstructorDescriptors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor findFunctionDescriptor(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl.getMembers.visitor.1 kotlin.reflect.KCallable&lt;?&gt; visitFunctionDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, kotlin.Unit) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty1Impl kotlin.reflect.jvm.internal.KMutablePropertyImpl.Setter getSetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionObjectRenderer java.lang.String renderFunction(kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl kotlin.reflect.jvm.internal.FunctionCaller&lt;?&gt; getCaller()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.Getter kotlin.reflect.jvm.internal.impl.descriptors.PropertyAccessorDescriptor getDescriptor$kotlin_reflection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty2Augmented KProperty2Augmented(kotlin.jvm.internal.PropertyReference2) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KParameterImpl KParameterImpl(kotlin.reflect.jvm.internal.KCallableImpl&lt;?&gt;, int, kotlin.reflect.KParameter.Kind, kotlin.jvm.functions.Function0&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.ParameterDescriptor&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.DefaultImpls R call(kotlin.reflect.jvm.internal.KMutablePropertyImpl&lt;R&gt;, java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty0Impl KMutableProperty0Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.DefaultImpls kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotated getAnnotated(kotlin.reflect.jvm.internal.KPropertyImpl&lt;? extends R&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.BuiltInFunction BuiltInFunction(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.Setter kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotated getAnnotated()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.JavaConstructor java.lang.String asString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl KFunctionImpl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller FunctionCaller(M, java.lang.reflect.Type, java.lang.Class&lt;?&gt;, java.lang.reflect.Type[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableImpl.DefaultImpls kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotated getAnnotated(kotlin.reflect.jvm.internal.KCallableImpl&lt;? extends R&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty1Impl kotlin.reflect.jvm.internal.FunctionCaller&lt;?&gt; getCaller()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.DefaultImpls R call(kotlin.reflect.jvm.internal.KMutablePropertyImpl&lt;R&gt;, java.lang.Object...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableImpl kotlin.reflect.jvm.internal.FunctionCaller&lt;?&gt; getCaller()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty0Impl KMutableProperty0Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty2Impl KProperty2Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.Setter void call(java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.InstanceMethod java.lang.Object call(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.RuntimeTypeMapper kotlin.reflect.jvm.internal.JvmPropertySignature mapPropertySignature(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.BuiltInFunction.Predefined Predefined(java.lang.String, java.lang.reflect.Member) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.StaticMethod java.lang.Object call(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KMutableProperty2 mutableProperty2(kotlin.jvm.internal.MutablePropertyReference2) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl KFunctionImpl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KClass createKotlinClass(java.lang.Class, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty0Impl java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl java.lang.String getModuleName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor&gt; getFunctions(kotlin.reflect.jvm.internal.impl.name.Name)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty2Impl kotlin.reflect.jvm.internal.KProperty2Impl.Getter&lt;D,E,R&gt; getGetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableImpl.DefaultImpls java.util.List&lt;java.lang.annotation.Annotation&gt; getAnnotations(kotlin.reflect.jvm.internal.KCallableImpl&lt;? extends R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KParameterImpl KParameterImpl(kotlin.reflect.jvm.internal.KCallableImpl&lt;?&gt;, int, kotlin.reflect.KParameter.Kind, kotlin.jvm.functions.Function0&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.ParameterDescriptor&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl java.lang.String access$getSignature$p(kotlin.reflect.jvm.internal.KFunctionImpl)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty2FromReferenceImpl KProperty2FromReferenceImpl(kotlin.jvm.internal.PropertyReference2) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor findFunctionDescriptor(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KParameterImpl java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmPropertySignature.JavaField java.lang.String asString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KTypeImpl KTypeImpl(kotlin.reflect.jvm.internal.impl.types.KotlinType, kotlin.jvm.functions.Function0&lt;? extends java.lang.reflect.Type&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl java.lang.String getSignature()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.JvmStaticInObjectFieldSetter void checkArguments(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmPropertySignature.KotlinProperty kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Property getProto()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty DescriptorBasedProperty(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotated getAnnotated()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl kotlin.reflect.jvm.internal.impl.resolve.scopes.MemberScope getScope$kotlin_reflection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.Getter kotlin.reflect.jvm.internal.impl.descriptors.PropertyGetterDescriptor getDescriptor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty0Impl KProperty0Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.DefaultImpls kotlin.reflect.KType getReturnType(kotlin.reflect.jvm.internal.KMutablePropertyImpl&lt;R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KParameterImpl KParameterImpl(kotlin.reflect.jvm.internal.KCallableImpl&lt;?&gt;, int, kotlin.reflect.KParameter.Kind, kotlin.jvm.functions.Function0&lt;? extends kotlin.reflect.jvm.internal.impl.descriptors.ParameterDescriptor&gt;) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor findFunctionDescriptor(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty1Impl.Setter kotlin.reflect.jvm.internal.KPropertyImpl getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.Setter kotlin.reflect.jvm.internal.FunctionCaller&lt;?&gt; getCaller()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty2Impl kotlin.reflect.jvm.internal.KPropertyImpl.Getter getGetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KTypeImpl KTypeImpl(kotlin.reflect.jvm.internal.impl.types.KotlinType, kotlin.jvm.functions.Function0&lt;? extends java.lang.reflect.Type&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.DefaultImpls kotlin.reflect.jvm.internal.FunctionCaller&lt;?&gt; getCaller(kotlin.reflect.jvm.internal.KMutablePropertyImpl&lt;R&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty1Impl KMutableProperty1Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.EmptyContainerForLocal java.lang.Class&lt;?&gt; getJClass()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionFromReferenceImpl KFunctionFromReferenceImpl(kotlin.jvm.internal.FunctionReference) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty0Impl.Getter kotlin.reflect.KProperty getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty DescriptorBasedProperty(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmPropertySignature.KotlinProperty KotlinProperty(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Property, kotlin.reflect.jvm.internal.impl.serialization.jvm.JvmProtoBuf.JvmPropertySignature, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeTable) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionObjectRenderer java.lang.String renderProperty(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty2Impl kotlin.reflect.KMutableProperty.Setter getSetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty0Augmented KMutableProperty0Augmented(kotlin.jvm.internal.MutablePropertyReference0) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty2Impl kotlin.reflect.KMutableProperty2.Setter getSetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor&gt; getFunctions(kotlin.reflect.jvm.internal.impl.name.Name)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.UtilKt kotlin.reflect.jvm.internal.impl.name.FqName getJVM_STATIC()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KProperty2 property2(kotlin.jvm.internal.PropertyReference2) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor getDescriptor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl java.util.List&lt;java.lang.annotation.Annotation&gt; getAnnotations()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty0FromReferenceImpl KMutableProperty0FromReferenceImpl(kotlin.jvm.internal.MutablePropertyReference0) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl kotlin.reflect.KType getReturnType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty1Impl KMutableProperty1Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.Getter java.util.List&lt;kotlin.reflect.KParameter&gt; getParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty0Impl kotlin.reflect.jvm.internal.KMutablePropertyImpl.Setter getSetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller java.lang.reflect.Type getReturnType$kotlin_reflection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmPropertySignature.KotlinProperty KotlinProperty(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Property, kotlin.reflect.jvm.internal.impl.serialization.jvm.JvmProtoBuf.JvmPropertySignature, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeTable) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty0Impl KProperty0Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.DefaultImpls kotlin.reflect.jvm.internal.FunctionCaller&lt;?&gt; getDefaultCaller(kotlin.reflect.jvm.internal.KMutablePropertyImpl&lt;R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty2Impl kotlin.reflect.jvm.internal.KMutableProperty2Impl.Setter&lt;D,E,R&gt; getSetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.EmptyContainerForLocal java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor&gt; getProperties(kotlin.reflect.jvm.internal.impl.name.Name) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.FieldSetter FieldSetter(java.lang.reflect.Field, boolean, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature java.lang.String asString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty1Impl KMutableProperty1Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.JvmStaticInObject java.lang.Object call(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.UtilKt R reflectionCall(kotlin.jvm.functions.Function0&lt;? extends R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmPropertySignature.KotlinProperty KotlinProperty(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Property, kotlin.reflect.jvm.internal.impl.serialization.jvm.JvmProtoBuf.JvmPropertySignature, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeTable) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty0Impl KProperty0Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.KotlinFunction java.lang.String getMethodName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmPropertySignature.KotlinProperty kotlin.reflect.jvm.internal.impl.serialization.jvm.JvmProtoBuf.JvmPropertySignature getSignature()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.InstanceMethod InstanceMethod(java.lang.reflect.Method) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.KotlinConstructor java.lang.String getSignature()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl.getMembers.visitor.1 java.lang.Object visitPropertyDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl java.util.Collection&lt;kotlin.reflect.KCallable&lt;?&gt;&gt; getMembers()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImplKt kotlin.reflect.jvm.internal.FunctionCaller access$computeCallerForAccessor(kotlin.reflect.jvm.internal.KPropertyImpl.Accessor, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.RuntimeTypeMapper kotlin.reflect.jvm.internal.JvmPropertySignature mapPropertySignature(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.EmptyContainerForLocal java.util.Collection&lt;kotlin.reflect.KCallable&lt;?&gt;&gt; getMembers()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.DefaultImpls java.lang.String getName(kotlin.reflect.jvm.internal.KPropertyImpl&lt;? extends R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmPropertySignature.JavaField JavaField(java.lang.reflect.Field) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl java.lang.String access$getSignature$p(kotlin.reflect.jvm.internal.KFunctionImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty1Impl KMutableProperty1Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty2Impl kotlin.reflect.jvm.internal.FunctionCaller&lt;?&gt; getCaller()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty2Impl KMutableProperty2Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.Setter java.util.List&lt;java.lang.annotation.Annotation&gt; getAnnotations()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.FieldGetter FieldGetter(java.lang.reflect.Field, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.KotlinConstructor KotlinConstructor(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmPropertySignature.KotlinProperty KotlinProperty(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Property, kotlin.reflect.jvm.internal.impl.serialization.jvm.JvmProtoBuf.JvmPropertySignature, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeTable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl.getMembers.visitor.1 java.lang.Object visitPropertyDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor&gt; getFunctions(kotlin.reflect.jvm.internal.impl.name.Name) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl java.lang.reflect.Field findFieldBySignature(java.lang.String, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty0Impl KProperty0Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionFromReferenceImpl java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty kotlin.reflect.KType getReturnType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty2Impl KMutableProperty2Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.JavaConstructor JavaConstructor(java.lang.reflect.Constructor&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.FieldSetter java.lang.Object call(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmPropertySignature.KotlinProperty KotlinProperty(kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor, kotlin.reflect.jvm.internal.impl.serialization.ProtoBuf.Property, kotlin.reflect.jvm.internal.impl.serialization.jvm.JvmProtoBuf.JvmPropertySignature, kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver, kotlin.reflect.jvm.internal.impl.serialization.deserialization.TypeTable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty2Impl.Setter kotlin.reflect.jvm.internal.KMutablePropertyImpl getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor&gt; getConstructorDescriptors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.KotlinFunction java.lang.String asString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmPropertySignature java.lang.String asString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl java.util.Collection&lt;kotlin.reflect.KClass&lt;?&gt;&gt; getNestedClasses()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor&gt; getFunctions(kotlin.reflect.jvm.internal.impl.name.Name) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.Getter R call(java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionObjectRenderer INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.EmptyContainerForLocal java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor&gt; getProperties(kotlin.reflect.jvm.internal.impl.name.Name)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.InstanceFieldSetter InstanceFieldSetter(java.lang.reflect.Field, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KMutableProperty2 mutableProperty2(kotlin.jvm.internal.MutablePropertyReference2)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.BuiltInFunction.Predefined java.lang.reflect.Member getMember(kotlin.reflect.jvm.internal.KDeclarationContainerImpl)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty0Augmented java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl KPackageImpl(java.lang.Class&lt;?&gt;, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty0Impl KProperty0Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller java.lang.Object call(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.ClassCompanionFieldSetter java.lang.Object call(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty1Impl.Setter kotlin.reflect.KProperty getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor getDescriptor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionObjectRenderer java.lang.String renderParameter(kotlin.reflect.jvm.internal.KParameterImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.DefaultImpls kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotated getAnnotated(kotlin.reflect.jvm.internal.KPropertyImpl&lt;? extends R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.Setter kotlin.reflect.jvm.internal.impl.descriptors.PropertySetterDescriptor getDescriptor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl kotlin.reflect.jvm.internal.impl.name.ClassId access$getClassId$p(kotlin.reflect.jvm.internal.KClassImpl)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty2Impl.Getter kotlin.reflect.jvm.internal.KProperty2Impl&lt;D,E,R&gt; getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty1Impl kotlin.reflect.jvm.internal.KProperty1Impl.Getter&lt;T,R&gt; getGetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty2Impl KMutableProperty2Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KAnnotatedElementImpl.DefaultImpls java.util.List&lt;java.lang.annotation.Annotation&gt; getAnnotations(kotlin.reflect.jvm.internal.KAnnotatedElementImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty1Impl.Getter kotlin.reflect.jvm.internal.KPropertyImpl getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty2Impl kotlin.reflect.KProperty.Getter getGetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmPropertySignature.KotlinProperty kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor getDescriptor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl kotlin.reflect.jvm.internal.KPropertyImpl.Getter&lt;R&gt; getGetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl kotlin.reflect.jvm.internal.KPropertyImpl access$createProperty(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty0Augmented java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty1Augmented kotlin.jvm.internal.MutablePropertyReference1 getReference()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.DefaultImpls R call(kotlin.reflect.jvm.internal.KPropertyImpl&lt;? extends R&gt;, java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty1Impl KProperty1Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty0Augmented kotlin.jvm.internal.MutablePropertyReference0 getReference()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl KFunctionImpl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotated getAnnotated()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty0Impl.Getter kotlin.reflect.jvm.internal.KProperty0Impl&lt;R&gt; getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl.getMembers.visitor.1 java.lang.Object visitFunctionDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.EmptyContainerForLocal java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor&gt; getFunctions(kotlin.reflect.jvm.internal.impl.name.Name)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty1Impl kotlin.reflect.jvm.internal.KPropertyImpl.Getter getGetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableImpl.DefaultImpls java.util.List&lt;kotlin.reflect.KParameter&gt; getParameters(kotlin.reflect.jvm.internal.KCallableImpl&lt;? extends R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableImpl R call(java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl KFunctionImpl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmPropertySignature.KotlinProperty java.lang.String asString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty0Augmented kotlin.jvm.internal.PropertyReference0 getReference()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImplKt kotlin.reflect.jvm.internal.FunctionCaller access$computeCallerForAccessor(kotlin.reflect.jvm.internal.KPropertyImpl.Accessor, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.DefaultImpls java.util.List&lt;kotlin.reflect.KParameter&gt; getParameters(kotlin.reflect.jvm.internal.KMutablePropertyImpl&lt;R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableImpl kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotated getAnnotated()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty0Impl.Setter kotlin.reflect.jvm.internal.KMutableProperty0Impl&lt;R&gt; getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.DefaultImpls R call(kotlin.reflect.jvm.internal.KPropertyImpl&lt;? extends R&gt;, java.lang.Object...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty1Impl KProperty1Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl KFunctionImpl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl kotlin.reflect.jvm.internal.impl.resolve.scopes.MemberScope getStaticScope$kotlin_reflection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableImpl.DefaultImpls R call(kotlin.reflect.jvm.internal.KCallableImpl&lt;? extends R&gt;, java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty2Augmented kotlin.jvm.internal.MutablePropertyReference2 getReference()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.Getter kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor getDescriptor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl java.util.Collection&lt;kotlin.reflect.KFunction&lt;T&gt;&gt; getConstructors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty2Augmented KMutableProperty2Augmented(kotlin.jvm.internal.MutablePropertyReference2) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.Setter kotlin.reflect.jvm.internal.KMutablePropertyImpl&lt;R&gt; getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty1Impl.Getter Getter(kotlin.reflect.jvm.internal.KProperty1Impl&lt;T,? extends R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor&gt; getProperties(kotlin.reflect.jvm.internal.impl.name.Name)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty0Impl.Setter kotlin.reflect.KProperty getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectProperties.LazyWeakVal LazyWeakVal(kotlin.jvm.functions.Function0&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.ClassCompanionFieldSetter ClassCompanionFieldSetter(java.lang.reflect.Field, java.lang.Class&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl java.util.List&lt;kotlin.reflect.KParameter&gt; getParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl.getMembers.visitor.1 java.lang.Object visitConstructorDescriptor(kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty1Impl.Getter kotlin.reflect.jvm.internal.KProperty1Impl&lt;T,R&gt; getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.ClassCompanionFieldSetter ClassCompanionFieldSetter(java.lang.reflect.Field, java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor getDescriptor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KCallableImpl.DefaultImpls java.util.List&lt;kotlin.reflect.KParameter&gt; getParameters(kotlin.reflect.jvm.internal.KCallableImpl&lt;? extends R&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmPropertySignature.KotlinProperty kotlin.reflect.jvm.internal.impl.serialization.deserialization.NameResolver getNameResolver()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor&gt; getFunctions(kotlin.reflect.jvm.internal.impl.name.Name) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl kotlin.reflect.jvm.internal.KDeclarationContainerImpl access$getContainer$p(kotlin.reflect.jvm.internal.KFunctionImpl)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmPropertySignature.JavaField java.lang.reflect.Field getField()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPackageImpl java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.DefaultImpls kotlin.reflect.jvm.internal.FunctionCaller&lt;?&gt; getDefaultCaller(kotlin.reflect.jvm.internal.KPropertyImpl&lt;? extends R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.DefaultImpls java.lang.String getName(kotlin.reflect.jvm.internal.KMutablePropertyImpl&lt;R&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty1Impl KProperty1Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.DefaultImpls java.lang.String getName(kotlin.reflect.jvm.internal.KMutablePropertyImpl&lt;R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.RuntimeTypeMapper kotlin.reflect.jvm.internal.impl.name.ClassId mapJvmClassToKotlinClassId(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl kotlin.reflect.jvm.internal.KPropertyImpl access$createProperty(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl kotlin.reflect.jvm.internal.KPropertyImpl access$createProperty(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty1Impl.Getter kotlin.reflect.KProperty getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty1FromReferenceImpl KProperty1FromReferenceImpl(kotlin.jvm.internal.PropertyReference1) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.DefaultImpls R callBy(kotlin.reflect.jvm.internal.KPropertyImpl&lt;? extends R&gt;, java.util.Map&lt;kotlin.reflect.KParameter,? extends java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.Method Method(java.lang.reflect.Method, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty1Augmented kotlin.jvm.internal.PropertyReference1 getReference()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.DefaultImpls kotlin.reflect.jvm.internal.FunctionCaller&lt;?&gt; getCaller(kotlin.reflect.jvm.internal.KPropertyImpl&lt;? extends R&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.Getter java.util.List&lt;java.lang.annotation.Annotation&gt; getAnnotations()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty2FromReferenceImpl KMutableProperty2FromReferenceImpl(kotlin.jvm.internal.MutablePropertyReference2) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty1Impl KProperty1Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.DefaultImpls kotlin.reflect.jvm.internal.FunctionCaller&lt;?&gt; getCaller(kotlin.reflect.jvm.internal.KPropertyImpl&lt;? extends R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.BuiltInFunction java.lang.reflect.Member getMember(kotlin.reflect.jvm.internal.KDeclarationContainerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.DefaultImpls kotlin.reflect.jvm.internal.FunctionCaller&lt;?&gt; getCaller(kotlin.reflect.jvm.internal.KMutablePropertyImpl&lt;R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl kotlin.reflect.jvm.internal.KMutablePropertyImpl.Setter&lt;R&gt; getSetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.ClassCompanionFieldGetter ClassCompanionFieldGetter(java.lang.reflect.Field, java.lang.Class&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl java.lang.reflect.Method findMethodBySignature(java.lang.String, java.lang.String, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor&gt; getProperties(kotlin.reflect.jvm.internal.impl.name.Name) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.KotlinConstructor java.lang.String getConstructorDesc()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.DefaultImpls kotlin.reflect.KType getReturnType(kotlin.reflect.jvm.internal.KMutablePropertyImpl&lt;R&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.Getter kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotated getAnnotated()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.Setter kotlin.reflect.KType getReturnType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.Setter java.lang.Object call(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl kotlin.reflect.jvm.internal.impl.name.ClassId access$getClassId$p(kotlin.reflect.jvm.internal.KClassImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor findPropertyDescriptor(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KTypeImpl java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.Setter java.lang.Object callBy(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.DefaultImpls kotlin.reflect.KType getReturnType(kotlin.reflect.jvm.internal.KPropertyImpl&lt;? extends R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty DescriptorBasedProperty(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl java.lang.reflect.Method findMethodBySignature(java.lang.String, java.lang.String, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.FunctionCaller.ClassCompanionFieldGetter ClassCompanionFieldGetter(java.lang.reflect.Field, java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionObjectRenderer java.lang.String renderType(kotlin.reflect.jvm.internal.impl.types.KotlinType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.ReflectionFactoryImpl kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty1Impl kotlin.reflect.KMutableProperty1.Setter getSetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty DescriptorBasedProperty(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KClassImpl java.util.Collection&lt;kotlin.reflect.jvm.internal.impl.descriptors.ConstructorDescriptor&gt; getConstructorDescriptors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl java.lang.reflect.Constructor&lt;?&gt; findConstructorBySignature(java.lang.String, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty R call(java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty0Impl.Setter kotlin.reflect.jvm.internal.KMutablePropertyImpl getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor getDescriptor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty1Impl KMutableProperty1Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty0Impl kotlin.reflect.KProperty.Getter getGetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.Accessor kotlin.reflect.jvm.internal.KPropertyImpl&lt;R&gt; getProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty DescriptorBasedProperty(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String, kotlin.reflect.jvm.internal.impl.descriptors.PropertyDescriptor) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.Setter kotlin.reflect.jvm.internal.impl.descriptors.PropertyAccessorDescriptor getDescriptor$kotlin_reflection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty1Impl kotlin.reflect.KProperty1.Getter getGetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KAnnotatedElementImpl.DefaultImpls java.util.List&lt;java.lang.annotation.Annotation&gt; getAnnotations(kotlin.reflect.jvm.internal.KAnnotatedElementImpl)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty2Augmented kotlin.jvm.internal.PropertyReference2 getReference()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KParameterImpl kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotated getAnnotated()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.JvmFunctionSignature.BuiltInFunction.Predefined java.lang.reflect.Member getMember(kotlin.reflect.jvm.internal.KDeclarationContainerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionImpl java.lang.Object call(java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty0Impl.Setter Setter(kotlin.reflect.jvm.internal.KMutableProperty0Impl&lt;R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutablePropertyImpl.DefaultImpls R callBy(kotlin.reflect.jvm.internal.KMutablePropertyImpl&lt;R&gt;, java.util.Map&lt;kotlin.reflect.KParameter,? extends java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl kotlin.sequences.Sequence&lt;kotlin.reflect.KCallable&lt;?&gt;&gt; getMembers(kotlin.reflect.jvm.internal.impl.resolve.scopes.MemberScope, boolean, boolean, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty java.lang.String getSignature()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty0Impl kotlin.reflect.KMutableProperty.Setter getSetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KDeclarationContainerImpl Companion'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl.Getter java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty0FromReferenceImpl KProperty0FromReferenceImpl(kotlin.jvm.internal.PropertyReference0) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KProperty1Impl KProperty1Impl(kotlin.reflect.jvm.internal.KDeclarationContainerImpl, java.lang.String, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KFunctionFromReferenceImpl kotlin.jvm.internal.FunctionReference getReference()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.DescriptorBasedProperty kotlin.reflect.jvm.internal.KDeclarationContainerImpl getContainer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KPropertyImpl kotlin.reflect.jvm.internal.FunctionCaller&lt;?&gt; getCaller()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.KMutableProperty1Augmented KMutableProperty1Augmented(kotlin.jvm.internal.MutablePropertyReference1) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
