<root>
    <item
        name='org.apache.tools.ant.types.TarFileSet TarFileSet(org.apache.tools.ant.types.FileSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.LogLevel VERBOSE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Path void addFilelist(org.apache.tools.ant.types.FileList) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.FilterSet FilterSet(org.apache.tools.ant.types.FilterSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.PropertySet.PropertyRef void setPrefix(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.AntFilterReader org.apache.tools.ant.types.Parameter[] getParams()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Comparison LESS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.XMLCatalog void addConfiguredXMLCatalog(org.apache.tools.ant.types.XMLCatalog) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.PropertySet void appendPrefix(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.LogLevel java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Quantifier NONE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.PatternSet void setExcludesfile(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.ResourceCollection java.util.Iterator&lt;org.apache.tools.ant.types.Resource&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.types.TarFileSet org.apache.tools.ant.types.AbstractFileSet getRef(org.apache.tools.ant.Project)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.XMLCatalog org.apache.tools.ant.types.Path createCatalogPath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.AbstractFileSet java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.types.DataType T getCheckedRef(java.lang.Class&lt;T&gt;, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.DataType T getCheckedRef(java.lang.Class&lt;T&gt;, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.FileList void addConfiguredFile(org.apache.tools.ant.types.FileList.FileName) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.AbstractFileSet org.apache.tools.ant.types.PatternSet.NameEntry createInclude()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.CommandlineJava org.apache.tools.ant.types.Commandline getVmCommand()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Commandline org.apache.tools.ant.types.Commandline.Argument createArgument()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Environment.Variable void setPath(org.apache.tools.ant.types.Path) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Quantifier ALL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Assertions java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Commandline java.lang.String describeArguments(org.apache.tools.ant.types.Commandline) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Quantifier java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.TimeComparison java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.ZipScanner void fillMapsFromArchive(org.apache.tools.ant.types.Resource, java.lang.String, java.util.Map&lt;java.lang.String,org.apache.tools.ant.types.Resource&gt;, java.util.Map&lt;java.lang.String,org.apache.tools.ant.types.Resource&gt;, java.util.Map&lt;java.lang.String,org.apache.tools.ant.types.Resource&gt;, java.util.Map&lt;java.lang.String,org.apache.tools.ant.types.Resource&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Comparison NOT_EQUAL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Path void addExisting(org.apache.tools.ant.types.Path) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Path void addFileset(org.apache.tools.ant.types.FileSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Substitution DATA_TYPE_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Comparison EQUAL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.PatternSet org.apache.tools.ant.types.PatternSet.NameEntry createIncludesFile()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.FileSet FileSet(org.apache.tools.ant.types.FileSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.TimeComparison AFTER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.PropertySet void appendRegex(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.PropertySet.BuiltinPropertySetName java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Quantifier ONE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.FilterSet void setBeginToken(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.PatternSet void addConfiguredPatternset(org.apache.tools.ant.types.PatternSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.ArchiveFileSet org.apache.tools.ant.types.ArchiveScanner newArchiveScanner()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.types.CommandlineJava org.apache.tools.ant.types.Commandline.Argument createVmArgument()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Commandline.Argument void setPath(org.apache.tools.ant.types.Path) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.FilterSet void addConfiguredPropertySet(org.apache.tools.ant.types.PropertySet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Mapper void addConfiguredMapper(org.apache.tools.ant.types.Mapper) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.DataType org.apache.tools.ant.BuildException tooManyAttributes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.FileSet java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.types.ArchiveScanner void fillMapsFromArchive(org.apache.tools.ant.types.Resource, java.lang.String, java.util.Map&lt;java.lang.String,org.apache.tools.ant.types.Resource&gt;, java.util.Map&lt;java.lang.String,org.apache.tools.ant.types.Resource&gt;, java.util.Map&lt;java.lang.String,org.apache.tools.ant.types.Resource&gt;, java.util.Map&lt;java.lang.String,org.apache.tools.ant.types.Resource&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.types.CommandlineJava org.apache.tools.ant.types.Commandline.Argument createArgument()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.LogLevel DEBUG'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.ArchiveFileSet ArchiveFileSet(org.apache.tools.ant.types.FileSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Environment.Variable void setFile(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.PropertySet void appendBuiltin(org.apache.tools.ant.types.PropertySet.BuiltinPropertySetName) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.DataType void invokeCircularReferenceCheck(org.apache.tools.ant.types.DataType, java.util.Stack&lt;java.lang.Object&gt;, org.apache.tools.ant.Project) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Path void setLocation(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.XMLCatalog CATALOG_RESOLVER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.FilterSet java.lang.String replaceTokens(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Assertions.BaseAssertion java.lang.String getCommandPrefix()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.types.Assertions.EnabledAssertion java.lang.String getCommandPrefix()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Quantifier ANY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.ArchiveFileSet void addConfigured(org.apache.tools.ant.types.ResourceCollection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Quantifier MAJORITY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.PropertySet.PropertyRef void setName(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.RedirectorElement org.apache.tools.ant.types.FilterChain createInputFilterChain()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.ArchiveScanner java.lang.String trimSeparator(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Quantifier boolean evaluate(boolean[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Path org.apache.tools.ant.types.Path concatSystemBootClasspath(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.TarFileSet TarFileSet(org.apache.tools.ant.types.TarFileSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.TimeComparison BEFORE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.CommandlineJava java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.DataType org.apache.tools.ant.BuildException noChildrenAllowed()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Path org.apache.tools.ant.types.Path concatSystemClasspath(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Path org.apache.tools.ant.types.Path createPath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.LogLevel WARN'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.RegularExpression DATA_TYPE_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.AbstractFileSet void setFile(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.ZipFileSet ZipFileSet(org.apache.tools.ant.types.ZipFileSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Path java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.RedirectorElement org.apache.tools.ant.types.FilterChain createErrorFilterChain()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Resource T as(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Commandline.Argument void setFile(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Path org.apache.tools.ant.types.Path concatSystemBootClasspath(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Path org.apache.tools.ant.types.Path concatSystemClasspath(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.ZipFileSet org.apache.tools.ant.types.ArchiveScanner newArchiveScanner()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.AbstractFileSet org.apache.tools.ant.types.PatternSet.NameEntry createExcludesFile()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Path.PathElement void setLocation(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.FilterSet void setEndToken(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.AbstractFileSet org.apache.tools.ant.types.PatternSet createPatternSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.FilterSet.OnMissing WARN'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Reference java.lang.Object getReferencedObject(org.apache.tools.ant.Project)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.ArchiveFileSet void configureFileSet(org.apache.tools.ant.types.ArchiveFileSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Comparison java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Comparison LESS_EQUAL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.XMLCatalog org.apache.tools.ant.types.Path createClasspath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.ArchiveFileSet ArchiveFileSet(org.apache.tools.ant.types.ArchiveFileSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.EnumeratedAttribute org.apache.tools.ant.types.EnumeratedAttribute getInstance(java.lang.Class&lt;? extends org.apache.tools.ant.types.EnumeratedAttribute&gt;, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Assertions.DisabledAssertion java.lang.String getCommandPrefix()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.TarFileSet org.apache.tools.ant.types.ArchiveScanner newArchiveScanner()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.EnumeratedAttribute org.apache.tools.ant.types.EnumeratedAttribute getInstance(java.lang.Class&lt;? extends org.apache.tools.ant.types.EnumeratedAttribute&gt;, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.AbstractFileSet void setExcludesfile(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.LogLevel INFO'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Path boolean translateFileSep(java.lang.StringBuffer, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.RedirectorElement void setOutput(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Comparison GREATER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Path void addDirset(org.apache.tools.ant.types.DirSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.DataType java.lang.Object getCheckedRef()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.PatternSet java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Commandline org.apache.tools.ant.types.Commandline.Argument createArgument(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.AbstractFileSet AbstractFileSet(org.apache.tools.ant.types.AbstractFileSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.ArchiveFileSet java.lang.Object getCheckedRef(org.apache.tools.ant.Project) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.types.TarScanner void fillMapsFromArchive(org.apache.tools.ant.types.Resource, java.lang.String, java.util.Map&lt;java.lang.String,org.apache.tools.ant.types.Resource&gt;, java.util.Map&lt;java.lang.String,org.apache.tools.ant.types.Resource&gt;, java.util.Map&lt;java.lang.String,org.apache.tools.ant.types.Resource&gt;, java.util.Map&lt;java.lang.String,org.apache.tools.ant.types.Resource&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.ZipFileSet ZipFileSet(org.apache.tools.ant.types.FileSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Mapper.MapperType java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Commandline java.lang.String describeCommand(org.apache.tools.ant.types.Commandline) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.PatternSet org.apache.tools.ant.types.PatternSet.NameEntry createInclude()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.RedirectorElement void setInput(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.FilterSet.OnMissing java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.PropertySet void appendName(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Reference java.lang.Object getReferencedObject()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.ZipFileSet org.apache.tools.ant.types.AbstractFileSet getRef(org.apache.tools.ant.Project)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.CommandlineJava void addSysproperties(org.apache.tools.ant.types.CommandlineJava.SysProperties) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Path org.apache.tools.ant.types.Path.PathElement createPathElement()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.EnumeratedAttribute java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.tools.ant.types.Permissions.Permission void setName(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.RedirectorElement org.apache.tools.ant.types.FilterChain createOutputFilterChain()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Comparison GREATER_EQUAL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.DataType java.lang.Object getCheckedRef(org.apache.tools.ant.Project) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.FileList FileList(org.apache.tools.ant.types.FileList) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.PatternSet org.apache.tools.ant.types.PatternSet.NameEntry createExclude()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.PatternSet org.apache.tools.ant.types.PatternSet.NameEntry createExcludesFile()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.FilterSet DEFAULT_TOKEN_START'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.ArchiveScanner org.apache.tools.ant.types.Resource getResource(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.ResourceFactory org.apache.tools.ant.types.Resource getResource(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.types.CommandlineJava org.apache.tools.ant.types.Commandline getActualVMCommand()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.PatternSet void setIncludesfile(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.AntFilterReader org.apache.tools.ant.types.Path createClasspath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.DataType T getCheckedRef(java.lang.Class&lt;T&gt;, java.lang.String, org.apache.tools.ant.Project) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.DataType T getCheckedRef(java.lang.Class&lt;T&gt;, java.lang.String, org.apache.tools.ant.Project)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.DataType java.lang.Object getCheckedRef(org.apache.tools.ant.Project)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.XMLCatalog APACHE_RESOLVER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.DataType java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.PatternSet void append(org.apache.tools.ant.types.PatternSet, org.apache.tools.ant.Project) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.DataType T getCheckedRef(java.lang.Class&lt;T&gt;, java.lang.String, org.apache.tools.ant.Project) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.FilterSet DEFAULT_TOKEN_END'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.RedirectorElement org.apache.tools.ant.types.Mapper createMergeMapper(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.LogLevel ERR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.FilterSet.OnMissing IGNORE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.AbstractFileSet org.apache.tools.ant.types.AbstractFileSet getRef(org.apache.tools.ant.Project)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.types.FilterSet void addConfiguredFilterSet(org.apache.tools.ant.types.FilterSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.FilterSet void readFiltersFromFile(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.AbstractFileSet org.apache.tools.ant.types.PatternSet.NameEntry createExclude()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.DataType void pushAndInvokeCircularReferenceCheck(org.apache.tools.ant.types.DataType, java.util.Stack&lt;java.lang.Object&gt;, org.apache.tools.ant.Project) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Permissions.Permission void setClass(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.PropertySet.PropertyRef void setRegex(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.ResourceFactory org.apache.tools.ant.types.Resource getResource(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.types.Path.PathElement java.util.Iterator&lt;org.apache.tools.ant.types.Resource&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Path void add(org.apache.tools.ant.types.Path) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Commandline java.lang.String quoteArgument(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Mapper org.apache.tools.ant.types.Path createClasspath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.PropertySet.PropertyRef void setBuiltin(org.apache.tools.ant.types.PropertySet.BuiltinPropertySetName) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Permissions.Permission void setActions(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.AbstractFileSet org.apache.tools.ant.types.PatternSet.NameEntry createIncludesFile()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Path org.apache.tools.ant.types.Path concatSystemClasspath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.DirSet DirSet(org.apache.tools.ant.types.DirSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.TimeComparison EQUAL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.FilterSet org.apache.tools.ant.types.FilterSet.FiltersFile createFiltersfile()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.ArchiveScanner void setSrc(org.apache.tools.ant.types.Resource) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Path void addExisting(org.apache.tools.ant.types.Path, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Description java.lang.String getDescription(org.apache.tools.ant.Project) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.Commandline org.apache.tools.ant.types.Commandline.Marker createMarker()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.PropertySet java.util.Properties getProperties()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.CommandlineJava.SysProperties void addSysproperties(org.apache.tools.ant.types.CommandlineJava.SysProperties) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.TarFileSet void configureFileSet(org.apache.tools.ant.types.ArchiveFileSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.RedirectorElement void setError(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.ArchiveScanner boolean match(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.DataType org.apache.tools.ant.BuildException circularReference()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Commandline void addArguments(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Commandline java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.DataType void pushAndInvokeCircularReferenceCheck(org.apache.tools.ant.types.DataType, java.util.Stack&lt;java.lang.Object&gt;, org.apache.tools.ant.Project) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.FilterSet.OnMissing FAIL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.AbstractFileSet void setIncludesfile(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.RedirectorElement org.apache.tools.ant.types.Mapper createMergeMapper(java.io.File)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.types.PatternSet void addConfiguredInvert(org.apache.tools.ant.types.PatternSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.types.Resource java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
