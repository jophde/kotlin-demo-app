<root>
    <item
        name='org.apache.tools.ant.taskdefs.Unpack void setSrcResource(org.apache.tools.ant.types.Resource) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.AntlibDefinition void setURI(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Javadoc org.apache.tools.ant.types.Path createClasspath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ExecuteOn java.lang.String[] getCommandline(java.lang.String[], java.io.File[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.RecorderEntry void taskFinished(org.apache.tools.ant.BuildEvent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.XmlProperty java.lang.Object processNode(org.w3c.dom.Node, java.lang.String, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Checksum.FormatElement org.apache.tools.ant.taskdefs.Checksum.FormatElement getDefault()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Checksum void setFormat(org.apache.tools.ant.taskdefs.Checksum.FormatElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Manifest void addConfiguredSection(org.apache.tools.ant.taskdefs.Manifest.Section) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Manifest void addConfiguredAttribute(org.apache.tools.ant.taskdefs.Manifest.Attribute) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.SQLExec void execSQL(java.lang.String, java.io.PrintStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.FixCRLF void setTab(org.apache.tools.ant.taskdefs.FixCRLF.AddAsisRemove) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.SubAnt void addConfiguredTarget(org.apache.tools.ant.taskdefs.Ant.TargetElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.SignJar ERROR_TODIR_AND_SIGNEDJAR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.GUnzip java.lang.String getDefaultExtension()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.SQLExec.DelimiterType java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Recorder void taskFinished(org.apache.tools.ant.BuildEvent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Apt org.apache.tools.ant.taskdefs.Apt.Option createOption()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Available void setFile(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Javadoc org.apache.tools.ant.types.Path createBootclasspath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Rmic ERROR_LOADING_CAUSED_EXCEPTION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Zip boolean isEmpty(org.apache.tools.ant.types.Resource[][]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Manifest DEFAULT_MANIFEST_VERSION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.BUnzip2 java.lang.String getDefaultExtension()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.SQLExec.Transaction void addConfigured(org.apache.tools.ant.types.ResourceCollection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ExecuteOn void runExec(org.apache.tools.ant.taskdefs.Execute) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Apt ERROR_WRONG_JAVA_VERSION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.BindTargets void setTargets(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.SubAnt java.lang.String getDefaultBuildFile()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Replace void addConfigured(org.apache.tools.ant.types.ResourceCollection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Tar.TarLongFileMode TRUNCATE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.SQLExec.OnError java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Tstamp.Unit java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Manifest.Attribute void parse(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Pack void zipResource(org.apache.tools.ant.types.Resource, java.io.OutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Javac org.apache.tools.ant.types.Path recreateSrc()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Jar void setManifest(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Definer.Format java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ExecTask org.apache.tools.ant.types.Commandline.Argument createArg()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Length void setMode(org.apache.tools.ant.taskdefs.Length.FileMode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.SQLExec void addFileset(org.apache.tools.ant.types.FileSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Tar.TarLongFileMode GNU'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Antlib void addTask(org.apache.tools.ant.Task) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Touch void addConfiguredMapper(org.apache.tools.ant.types.Mapper) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.War void addClasses(org.apache.tools.ant.types.ZipFileSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Zip org.apache.tools.ant.taskdefs.Zip.ArchiveState getNonFileSetResourcesToAdd(org.apache.tools.ant.types.ResourceCollection[], java.io.File, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Tstamp org.apache.tools.ant.taskdefs.Tstamp.CustomFormat createFormat()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Get boolean doGet(java.net.URL, java.io.File, int, org.apache.tools.ant.taskdefs.Get.DownloadProgress) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Recorder void taskStarted(org.apache.tools.ant.BuildEvent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Rmic ERROR_NOT_DEFINED'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ExecuteOn java.lang.String[] getFiles(java.io.File, org.apache.tools.ant.DirectoryScanner) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.SQLExec void add(org.apache.tools.ant.types.ResourceCollection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Definer.OnError POLICY_IGNORE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Manifest EOL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.SignJar ERROR_MAPPER_WITHOUT_DEST'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Sequential void addTask(org.apache.tools.ant.Task) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.tools.ant.taskdefs.SignJar ERROR_NO_ALIAS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Sync.MyCopy void scan(java.io.File, java.io.File, java.lang.String[], java.lang.String[]) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.RecorderEntry void taskStarted(org.apache.tools.ant.BuildEvent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Recorder void setLoglevel(org.apache.tools.ant.taskdefs.Recorder.VerbosityLevelChoices) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Tar.TarCompressionMethod java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Expand ERROR_MULTIPLE_MAPPERS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Copy java.util.Map&lt;org.apache.tools.ant.types.Resource,java.lang.String[]&gt; scan(org.apache.tools.ant.types.Resource[], java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ExecuteOn void runParallel(org.apache.tools.ant.taskdefs.Execute, java.util.Vector&lt;java.lang.String&gt;, java.util.Vector&lt;java.io.File&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Jar void writeIndexLikeList(java.util.List&lt;java.lang.String&gt;, java.util.List&lt;java.lang.String&gt;, java.io.PrintWriter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Zip org.apache.tools.ant.types.Resource[][] grabNonFileSetResources(org.apache.tools.ant.types.ResourceCollection[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.XSLTProcess.ParamType XPATH_BOOLEAN'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.AbstractJarSignerTask JARSIGNER_COMMAND'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Definer.OnError POLICY_FAIL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.SQLExec org.apache.tools.ant.taskdefs.SQLExec.Transaction createTransaction()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Expand void expandFile(org.apache.tools.ant.util.FileUtils, java.io.File, java.io.File) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Manifest.Section void merge(org.apache.tools.ant.taskdefs.Manifest.Section, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.RecorderEntry void buildFinished(org.apache.tools.ant.BuildEvent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Jikes void compile(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.XSLTProcess.ParamType BOOLEAN'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.XSLTProcess void addConfiguredXMLCatalog(org.apache.tools.ant.types.XMLCatalog) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.AbstractJarSignerTask ERROR_NO_SOURCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ExecTask org.apache.tools.ant.taskdefs.ExecuteStreamHandler createHandler()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Pack void zipResource(org.apache.tools.ant.types.Resource, java.io.OutputStream) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.FixCRLF void setCr(org.apache.tools.ant.taskdefs.FixCRLF.AddAsisRemove) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Copy org.apache.tools.ant.types.FilterSet createFilterSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Jar void writeIndexLikeList(java.util.List&lt;java.lang.String&gt;, java.util.List&lt;java.lang.String&gt;, java.io.PrintWriter) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Property void loadFile(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Copy void buildMap(java.io.File, java.io.File, java.lang.String[], org.apache.tools.ant.util.FileNameMapper, java.util.Hashtable&lt;java.lang.String,java.lang.String[]&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Delete void removeDir(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.AbstractCvsTask void addCommandArgument(org.apache.tools.ant.types.Commandline, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.MacroDef.NestedSequential boolean similar(org.apache.tools.ant.taskdefs.MacroDef.NestedSequential) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.CallTarget org.apache.tools.ant.taskdefs.Property createParam()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Javadoc.AccessType java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.XSLTLiaison void transform(java.io.File, java.io.File) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Manifest.Section java.lang.String addAttributeAndCheck(org.apache.tools.ant.taskdefs.Manifest.Attribute) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.EchoXML.NamespacePolicy org.apache.tools.ant.util.DOMElementWriter.XmlNamespacePolicy getPolicy()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Move boolean okToDelete(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Definer.OnError POLICY_REPORT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Rmic ERROR_NOT_A_DIR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Tar boolean archiveIsUpToDate(org.apache.tools.ant.types.Resource) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Execute void waitFor(java.lang.Process) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Recorder void setAction(org.apache.tools.ant.taskdefs.Recorder.ActionChoices) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Checksum byte[] decodeHex(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Zip void setWhenempty(org.apache.tools.ant.taskdefs.Zip.WhenEmpty) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.MacroDef.TemplateElement void setName(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Manifest ATTRIBUTE_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Sync.MyCopy void scan(java.io.File, java.io.File, java.lang.String[], java.lang.String[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Tar.TarLongFileMode OMIT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.MakeUrl ERROR_NO_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.MacroDef void addConfiguredElement(org.apache.tools.ant.taskdefs.MacroDef.TemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Manifest.Section org.apache.tools.ant.taskdefs.Manifest.Attribute getAttribute(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Manifest.Section java.lang.String read(java.io.BufferedReader) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Manifest.Section void write(java.io.PrintWriter, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Retry void addTask(org.apache.tools.ant.Task) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ExecuteOn void runParallel(org.apache.tools.ant.taskdefs.Execute, java.util.Vector&lt;java.lang.String&gt;, java.util.Vector&lt;java.io.File&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Sync.MyCopy java.util.Map scan(org.apache.tools.ant.types.Resource[], java.io.File)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Tar void tarFile(java.io.File, org.apache.tools.tar.TarOutputStream, java.lang.String, org.apache.tools.ant.taskdefs.Tar.TarFileSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.FixCRLF.AddAsisRemove java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.XSLTProcess.ParamType XPATH_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.SQLExec.DelimiterType NORMAL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.XSLTProcess.TraceConfiguration java.io.OutputStream getOutputStream()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.AntStructure boolean isNmtoken(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Redirector org.apache.tools.ant.taskdefs.ExecuteStreamHandler createHandler()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Execute void runCommand(org.apache.tools.ant.Task, java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Java void setJar(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.SQLExec void setOnerror(org.apache.tools.ant.taskdefs.SQLExec.OnError) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Jar void grabFilesAndDirs(java.lang.String, java.util.List&lt;java.lang.String&gt;, java.util.List&lt;java.lang.String&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Replace java.util.Properties getProperties(org.apache.tools.ant.types.Resource) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.XSLTProcess org.apache.tools.ant.taskdefs.XSLTProcess.OutputProperty createOutputProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Recorder void subBuildFinished(org.apache.tools.ant.BuildEvent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.SQLExec void printResults(java.sql.ResultSet, java.io.PrintStream) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.GenerateKey.DistinguishedName java.lang.String encode(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.XSLTLiaison2 void configure(org.apache.tools.ant.taskdefs.XSLTProcess) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Copy org.apache.tools.ant.types.FilterChain createFilterChain()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.EchoXML.NamespacePolicy java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Manifest void write(java.io.PrintWriter, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Definer void setAntlib(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Redirector void setErrorEncoding(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.MacroDef.NestedSequential void addTask(org.apache.tools.ant.Task) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.XSLTLiaison void transform(java.io.File, java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.XSLTProcess void addConfiguredStyle(org.apache.tools.ant.types.resources.Resources) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Unpack void addConfigured(org.apache.tools.ant.types.ResourceCollection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.FixCRLF.CrLf java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.LogOutputStream void processLine(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Javac org.apache.tools.ant.types.Path createBootclasspath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Jar void addConfiguredService(org.apache.tools.ant.types.spi.Service) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.FixCRLF void setEof(org.apache.tools.ant.taskdefs.FixCRLF.AddAsisRemove) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Manifest ATTRIBUTE_FROM'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.MakeUrl ERROR_NO_FILES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Rmic org.apache.tools.ant.taskdefs.Rmic.ImplementationSpecificArgument createCompilerArg()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.KeySubst java.lang.String replace(java.lang.String, java.util.Hashtable&lt;java.lang.String,java.lang.String&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Redirector void setInputEncoding(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Zip void zipFile(java.io.File, org.apache.tools.zip.ZipOutputStream, java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Ant org.apache.tools.ant.taskdefs.Property createProperty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Jar.StrictMode java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ManifestTask void addConfiguredAttribute(org.apache.tools.ant.taskdefs.Manifest.Attribute) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.SubAnt org.apache.tools.ant.types.Path createBuildpath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.JikesOutputParser void parseOutput(java.io.BufferedReader) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ExecuteOn org.apache.tools.ant.taskdefs.ExecuteStreamHandler createHandler()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.War void addLib(org.apache.tools.ant.types.ZipFileSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Untar.UntarCompressionMethod java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.XSLTProcess.ParamType DOUBLE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.War void addWebinf(org.apache.tools.ant.types.ZipFileSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Zip org.apache.tools.ant.types.Resource[][] grabResources(org.apache.tools.ant.types.FileSet[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.VerifyJar ERROR_NO_FILE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Zip org.apache.tools.ant.taskdefs.Zip.ArchiveState getResourcesToAdd(org.apache.tools.ant.types.ResourceCollection[], java.io.File, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Tar boolean archiveIsUpToDate(java.lang.String[], java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.XSLTLiaison FILE_PROTOCOL_PREFIX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.JDBCTask org.apache.tools.ant.types.Path createClasspath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Parallel.TaskList void addTask(org.apache.tools.ant.Task) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Zip org.apache.tools.ant.types.Resource[][] grabResources(org.apache.tools.ant.types.FileSet[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Zip org.apache.tools.ant.types.Resource[] selectDirectoryResources(org.apache.tools.ant.types.Resource[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.FixCRLF java.io.Reader chain(java.io.Reader)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Replace java.util.Properties getProperties(java.io.File)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Parallel void addTask(org.apache.tools.ant.Task) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.RecorderEntry void subBuildFinished(org.apache.tools.ant.BuildEvent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Unpack void setSrc(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Zip org.apache.tools.ant.types.Resource[] selectFileResources(org.apache.tools.ant.types.Resource[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Javadoc org.apache.tools.ant.taskdefs.Javadoc.TagArgument createTag()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.War void zipFile(java.io.File, org.apache.tools.zip.ZipOutputStream, java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.DefBase org.apache.tools.ant.types.Path createClasspath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.ManifestClassPath void setJarFile(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.CallTarget void setTarget(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Jar.FilesetManifestConfig java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Property void addText(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.CopyPath ERROR_NO_PATH'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.MacroDef void addConfiguredAttribute(org.apache.tools.ant.taskdefs.MacroDef.Attribute) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Tar.TarLongFileMode POSIX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Jar void addMetainf(org.apache.tools.ant.types.ZipFileSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Manifest ATTRIBUTE_SIGNATURE_VERSION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Definer void setFormat(org.apache.tools.ant.taskdefs.Definer.Format) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.WaitFor.Unit SECOND'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Zip void setDuplicate(org.apache.tools.ant.taskdefs.Zip.Duplicate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Recorder void buildFinished(org.apache.tools.ant.BuildEvent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Antlib TAG'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Javac org.apache.tools.ant.types.Path createSrc()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Rmic void scanDir(java.io.File, java.lang.String[], org.apache.tools.ant.util.FileNameMapper) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Recorder void messageLogged(org.apache.tools.ant.BuildEvent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.tools.ant.taskdefs.XSLTProcess.ParamType XPATH_NUMBER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.PathConvert org.apache.tools.ant.types.Path createPath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Ant void setTarget(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Delete void removeFiles(java.io.File, java.lang.String[], java.lang.String[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Apt ERROR_IGNORING_COMPILER_OPTION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Javac org.apache.tools.ant.types.Path createSourcepath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Tar org.apache.tools.ant.taskdefs.Tar.TarFileSet asTarFileSet(org.apache.tools.ant.types.ArchiveFileSet)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Zip org.apache.tools.ant.taskdefs.Zip.ArchiveState getResourcesToAdd(org.apache.tools.ant.types.ResourceCollection[], java.io.File, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.XmlProperty void setPrefix(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.MacroInstance.Element void addTask(org.apache.tools.ant.Task) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Javadoc void setOverview(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.AbstractJarSignerTask void addValue(org.apache.tools.ant.taskdefs.ExecTask, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Javac org.apache.tools.ant.types.Path createExtdirs()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ExecuteOn void setType(org.apache.tools.ant.taskdefs.ExecuteOn.FileDirBoth) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Copy void doResourceOperations(java.util.Map&lt;org.apache.tools.ant.types.Resource,java.lang.String[]&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Tar boolean archiveIsUpToDate(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.XSLTProcess.ParamType INT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Zip org.apache.tools.ant.taskdefs.Zip.ArchiveState getResourcesToAdd(org.apache.tools.ant.types.FileSet[], java.io.File, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Delete void removeFiles(java.io.File, java.lang.String[], java.lang.String[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.XmlProperty void setSrcResource(org.apache.tools.ant.types.Resource) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Expand void expandResource(org.apache.tools.ant.types.Resource, java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Exec void setDir(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Manifest.Attribute Attribute(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Patch void setPatchfile(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Manifest.Section void removeAttribute(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Tar boolean check(org.apache.tools.ant.types.ResourceCollection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Replace java.util.Properties getProperties(org.apache.tools.ant.types.Resource)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Move boolean renameFile(java.io.File, java.io.File, boolean, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Tar java.lang.String[] getFileNames(org.apache.tools.ant.types.FileSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ExecTask org.apache.tools.ant.taskdefs.Execute prepareExec()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Pack void zipFile(java.io.File, java.io.OutputStream) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Tar.TarLongFileMode WARN'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.XSLTProcess.ParamType XPATH_NODESET'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Jar org.apache.tools.ant.taskdefs.Zip.ArchiveState getResourcesToAdd(org.apache.tools.ant.types.ResourceCollection[], java.io.File, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.AbstractJarSignerTask void declareSysProperty(org.apache.tools.ant.taskdefs.ExecTask, org.apache.tools.ant.types.Environment.Variable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.GenerateKey.DistinguishedName java.lang.Object createParam()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.ExecuteOn.FileDirBoth java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Definer void setOnError(org.apache.tools.ant.taskdefs.Definer.OnError) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Javadoc void setExtdirs(org.apache.tools.ant.types.Path) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.PumpStreamHandler java.lang.Thread createPump(java.io.InputStream, java.io.OutputStream, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.MacroInstance void addTask(org.apache.tools.ant.Task) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ManifestTask void addConfiguredSection(org.apache.tools.ant.taskdefs.Manifest.Section) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Untar void expandFile(org.apache.tools.ant.util.FileUtils, java.io.File, java.io.File) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Copy java.util.Map&lt;org.apache.tools.ant.types.Resource,java.lang.String[]&gt; buildMap(org.apache.tools.ant.types.Resource[], java.io.File, org.apache.tools.ant.util.FileNameMapper)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Definer.OnError POLICY_FAILALL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.MacroDef org.apache.tools.ant.UnknownElement getNestedTask()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Zip org.apache.tools.ant.taskdefs.Zip.ArchiveState getNonFileSetResourcesToAdd(org.apache.tools.ant.types.ResourceCollection[], java.io.File, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.SQLExec.DelimiterType ROW'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Javadoc void setHelpfile(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.AntStructure.StructurePrinter void printHead(java.io.PrintWriter, org.apache.tools.ant.Project, java.util.Hashtable&lt;java.lang.String,java.lang.Class&lt;?&gt;&gt;, java.util.Hashtable&lt;java.lang.String,java.lang.Class&lt;?&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.AbstractJarSignerTask void declareSysProperty(org.apache.tools.ant.taskdefs.ExecTask, org.apache.tools.ant.types.Environment.Variable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Rmic ERROR_UNABLE_TO_VERIFY_CLASS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Tstamp.CustomFormat void setUnit(org.apache.tools.ant.taskdefs.Tstamp.Unit) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Javadoc.PackageName void setName(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Checksum byte[] decodeHex(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.RecorderEntry void subBuildStarted(org.apache.tools.ant.BuildEvent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.WaitFor void setMaxWaitUnit(org.apache.tools.ant.taskdefs.WaitFor.Unit) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Zip.Zip64ModeAttribute NEVER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.WaitFor.Unit HOUR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Tar FAIL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ExecuteOn java.lang.String[] getCommandline(java.lang.String[], java.io.File[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Java org.apache.tools.ant.types.Path createClasspath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.SQLExec void printResults(java.io.PrintStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Manifest.Section java.lang.String getAttributeValue(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Antlib org.apache.tools.ant.taskdefs.Antlib createAntlib(org.apache.tools.ant.Project, java.net.URL, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Ant void addConfiguredTarget(org.apache.tools.ant.taskdefs.Ant.TargetElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Zip void addResources(org.apache.tools.ant.types.FileSet, org.apache.tools.ant.types.Resource[], org.apache.tools.zip.ZipOutputStream) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Property org.apache.tools.ant.types.Path createClasspath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Recorder void targetStarted(org.apache.tools.ant.BuildEvent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Property void loadUrl(java.net.URL) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Move void deleteDir(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Execute void closeStreams(java.lang.Process) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Tar java.lang.String[] getFileNames(org.apache.tools.ant.types.FileSet)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Java org.apache.tools.ant.types.Commandline.Argument createArg()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Antlib org.apache.tools.ant.taskdefs.Antlib createAntlib(org.apache.tools.ant.Project, java.net.URL, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.PathConvert org.apache.tools.ant.taskdefs.PathConvert.MapEntry createMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Definer.OnError java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Concat org.apache.tools.ant.types.Path createPath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.XSLTProcess PROCESSOR_TRAX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Ant java.lang.String getDefaultBuildFile()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Copy void scan(java.io.File, java.io.File, java.lang.String[], java.lang.String[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Rmic ERROR_BASE_NOT_SET'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.XSLTProcess org.apache.tools.ant.types.Path createClasspath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.FixCRLF void setEol(org.apache.tools.ant.taskdefs.FixCRLF.CrLf) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.FixCRLF.OneLiner java.lang.Object nextElement()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.RecorderEntry void targetStarted(org.apache.tools.ant.BuildEvent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Length.FileMode java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Javadoc void setStylesheetfile(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.MacroDef.Attribute void setName(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Touch DEFAULT_DF_FACTORY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Javadoc void setLinkoffline(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.LoadResource void addConfigured(org.apache.tools.ant.types.ResourceCollection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Classloader org.apache.tools.ant.types.Path createClasspath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Recorder void subBuildStarted(org.apache.tools.ant.BuildEvent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Copy void scan(java.io.File, java.io.File, java.lang.String[], java.lang.String[]) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ExecuteOn java.lang.String[] getDirs(java.io.File, org.apache.tools.ant.DirectoryScanner) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Zip void addResources(org.apache.tools.ant.types.ResourceCollection, org.apache.tools.ant.types.Resource[], org.apache.tools.zip.ZipOutputStream) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.CallTarget void addConfiguredTarget(org.apache.tools.ant.taskdefs.Ant.TargetElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Recorder.ActionChoices java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Rmic org.apache.tools.ant.types.Path createClasspath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Tar org.apache.tools.ant.taskdefs.Tar.TarFileSet createTarFileSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ExecuteJava int fork(org.apache.tools.ant.ProjectComponent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Tar WARN'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.PreSetDef void addTask(org.apache.tools.ant.Task) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.AntStructure boolean areNmtokens(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Pack void setSrcResource(org.apache.tools.ant.types.Resource) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Zip.Zip64ModeAttribute java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Manifest.Section java.util.Enumeration&lt;java.lang.String&gt; getAttributeKeys()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Pack void addConfigured(org.apache.tools.ant.types.ResourceCollection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.RecorderEntry void messageLogged(org.apache.tools.ant.BuildEvent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Tar.TarLongFileMode java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.AntStructure.StructurePrinter void printHead(java.io.PrintWriter, org.apache.tools.ant.Project, java.util.Hashtable&lt;java.lang.String,java.lang.Class&lt;?&gt;&gt;, java.util.Hashtable&lt;java.lang.String,java.lang.Class&lt;?&gt;&gt;) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.LoadProperties void addConfigured(org.apache.tools.ant.types.ResourceCollection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Tar TRUNCATE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.XmlProperty void addConfiguredXMLCatalog(org.apache.tools.ant.types.XMLCatalog) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.BindTargets void setOnMissingExtensionPoint(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Zip org.apache.tools.ant.taskdefs.Zip.ArchiveState getResourcesToAdd(org.apache.tools.ant.types.FileSet[], java.io.File, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Recorder org.apache.tools.ant.taskdefs.RecorderEntry getRecorder(java.lang.String, org.apache.tools.ant.Project)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Checksum.FormatElement java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Redirector void setOutputEncoding(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Definer java.lang.String makeResourceFromURI(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Manifest JAR_ENCODING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.SignJar ERROR_SIGNEDJAR_AND_PATHS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Java org.apache.tools.ant.types.Path createBootclasspath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Zip.UnicodeExtraField java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Echo void setLevel(org.apache.tools.ant.taskdefs.Echo.EchoLevel) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.VerifyJar ERROR_NO_VERIFY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.AntStructure.StructurePrinter void printHead(java.io.PrintWriter, org.apache.tools.ant.Project, java.util.Hashtable&lt;java.lang.String,java.lang.Class&lt;?&gt;&gt;, java.util.Hashtable&lt;java.lang.String,java.lang.Class&lt;?&gt;&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.tools.ant.taskdefs.WaitFor.Unit MINUTE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Java void run(java.lang.String, java.util.Vector&lt;java.lang.String&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ExecTask void runExec(org.apache.tools.ant.taskdefs.Execute) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Javac org.apache.tools.ant.types.Path createClasspath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Javadoc.DocletInfo org.apache.tools.ant.taskdefs.Javadoc.DocletParam createParam()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Zip.UnicodeExtraField NEVER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.XSLTProcess.ParamType LONG'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Jar org.apache.tools.ant.taskdefs.Zip.ArchiveState getResourcesToAdd(org.apache.tools.ant.types.ResourceCollection[], java.io.File, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.SQLExec void setDelimiterType(org.apache.tools.ant.taskdefs.SQLExec.DelimiterType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Touch void touch(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Ear void zipFile(java.io.File, org.apache.tools.zip.ZipOutputStream, java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Rmic ERROR_NO_BASE_EXISTS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Javadoc org.apache.tools.ant.types.Path createSourcepath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.UpToDate boolean scanDir(java.io.File, java.lang.String[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.EchoXML.NamespacePolicy DEFAULT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.SendEmail void setMailport(java.lang.Integer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Available.FileDir java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Definer void loadProperties(java.lang.ClassLoader, java.net.URL) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Apt WARNING_IGNORING_FORK'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.ExecTask void setOsFamily(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.PathConvert.TargetOs java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.WaitFor.Unit MILLISECOND'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Rmic ERROR_NOT_FOUND'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Concat void setEol(org.apache.tools.ant.taskdefs.FixCRLF.CrLf) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.AbstractCvsTask void runCommand(org.apache.tools.ant.types.Commandline) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Javadoc.ExtensionInfo org.apache.tools.ant.types.Path createPath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Move void deleteDir(java.io.File, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Recorder void targetFinished(org.apache.tools.ant.BuildEvent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Execute java.util.Vector&lt;java.lang.String&gt; getProcEnvironment()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Tar.TarFileSet TarFileSet(org.apache.tools.ant.types.FileSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ExecuteJava void setupCommandLineForVMS(org.apache.tools.ant.taskdefs.Execute, java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.ExecuteWatchdog void start(java.lang.Process) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.MakeUrl ERROR_MISSING_FILE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Javadoc org.apache.tools.ant.taskdefs.Javadoc.GroupArgument createGroup()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Touch.DateFormatFactory java.text.DateFormat getPrimaryFormat()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Java org.apache.tools.ant.types.Commandline.Argument createJvmarg()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Classloader void setClasspathRef(org.apache.tools.ant.types.Reference) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.XSLTProcess.ParamType STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.AntStructure.StructurePrinter void printTargetDecl(java.io.PrintWriter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.DefBase void setClasspathRef(org.apache.tools.ant.types.Reference) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.AbstractJarSignerTask org.apache.tools.ant.types.Path createUnifiedSourcePath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ExecuteJava void setupCommandLineForVMS(org.apache.tools.ant.taskdefs.Execute, java.lang.String[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.PathConvert void setTargetos(org.apache.tools.ant.taskdefs.PathConvert.TargetOs) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.WaitFor.Unit WEEK'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.ExecuteOn.FileDirBoth FILE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Available org.apache.tools.ant.types.Path createFilepath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.PathConvert.MapEntry java.lang.String apply(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Jar void setWhenempty(org.apache.tools.ant.taskdefs.Zip.WhenEmpty) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Tar.TarLongFileMode FAIL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Rmic ERROR_RMIC_FAILED'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.AbstractJarSignerTask org.apache.tools.ant.taskdefs.ExecTask createJarSigner()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Manifest.Section void addConfiguredAttribute(org.apache.tools.ant.taskdefs.Manifest.Attribute) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Execute java.lang.String toString(java.io.ByteArrayOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Apt EXECUTABLE_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Tar boolean check(java.io.File, java.lang.String[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.SignJar ERROR_BAD_MAP'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Untar void expandResource(org.apache.tools.ant.types.Resource, java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.RecorderEntry void targetFinished(org.apache.tools.ant.BuildEvent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Zip org.apache.tools.ant.types.Resource[] selectResources(org.apache.tools.ant.types.Resource[], org.apache.tools.ant.types.resources.selectors.ResourceSelector) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Ear void addArchives(org.apache.tools.ant.types.ZipFileSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Javadoc org.apache.tools.ant.taskdefs.Javadoc.LinkArgument createLink()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Javadoc void setAccess(org.apache.tools.ant.taskdefs.Javadoc.AccessType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Tar void tar(org.apache.tools.ant.types.ResourceCollection, org.apache.tools.tar.TarOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Manifest.Attribute void addContinuation(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.PreSetDef.PreSetDefinition java.lang.Object create(org.apache.tools.ant.Project)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Zip.Duplicate java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.MacroDef.Text void setName(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.XmlProperty void addConfigured(org.apache.tools.ant.types.ResourceCollection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Apt org.apache.tools.ant.types.Path createFactoryPath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Concat.TextElement void setFile(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.WhichResource org.apache.tools.ant.types.Path createClasspath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.WaitFor.Unit DAY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.XSLTProcess.ParamType XPATH_NODE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ExecTask void runExecute(org.apache.tools.ant.taskdefs.Execute) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Manifest java.util.Enumeration&lt;java.lang.String&gt; getSectionNames()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.AbstractJarSignerTask org.apache.tools.ant.types.Path createPath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.SubAnt org.apache.tools.ant.types.Path.PathElement createBuildpathElement()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Unpack void setDest(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.CopyPath ERROR_NO_MAPPER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Zip.Zip64ModeAttribute AS_NEEDED'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Jar void setFilesetmanifest(org.apache.tools.ant.taskdefs.Jar.FilesetManifestConfig) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Copy java.util.Map&lt;org.apache.tools.ant.types.Resource,java.lang.String[]&gt; scan(org.apache.tools.ant.types.Resource[], java.io.File)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.PropertyHelperTask org.apache.tools.ant.taskdefs.PropertyHelperTask.DelegateElement createDelegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.WaitFor void setCheckEveryUnit(org.apache.tools.ant.taskdefs.WaitFor.Unit) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ExecuteOn java.lang.String[] getCommandline(java.lang.String, java.io.File)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.SignJar ERROR_NO_STOREPASS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.ManifestTask VALID_ATTRIBUTE_CHARS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.XSLTProcess org.apache.tools.ant.taskdefs.XSLTProcess.Param createParam()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Manifest ATTRIBUTE_CLASSPATH'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Tar GNU'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Unpack java.lang.String getDefaultExtension()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.tools.ant.taskdefs.JDBCTask void setDriver(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.WaitFor.Unit java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Manifest.Section java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.PumpStreamHandler java.lang.Thread createPump(java.io.InputStream, java.io.OutputStream, boolean, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Manifest.Section void write(java.io.PrintWriter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ResourceCount void setRefid(org.apache.tools.ant.types.Reference) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Input.HandlerType java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.ManifestTask.Mode java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Zip org.apache.tools.ant.types.Resource[][] grabNonFileSetResources(org.apache.tools.ant.types.ResourceCollection[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.ExecuteOn java.lang.String[] getFilesAndDirs(org.apache.tools.ant.types.FileList) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Tar void tarResource(org.apache.tools.ant.types.Resource, org.apache.tools.tar.TarOutputStream, java.lang.String, org.apache.tools.ant.taskdefs.Tar.TarFileSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Antlib org.apache.tools.ant.taskdefs.Antlib createAntlib(org.apache.tools.ant.Project, java.net.URL, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.PumpStreamHandler java.lang.Thread createPump(java.io.InputStream, java.io.OutputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Classloader SYSTEM_LOADER_REF'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Echo void setOutput(org.apache.tools.ant.types.Resource) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.FixCRLF.OneLiner OneLiner(org.apache.tools.ant.taskdefs.FixCRLF, java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Replace org.apache.tools.ant.taskdefs.Replace.Replacefilter createReplacefilter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Manifest ERROR_FROM_FORBIDDEN'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Manifest org.apache.tools.ant.taskdefs.Manifest getDefaultManifest()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.FixCRLF ERROR_FILE_AND_SRCDIR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Expand NATIVE_ENCODING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Manifest void write(java.io.PrintWriter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.MacroDef void addConfiguredText(org.apache.tools.ant.taskdefs.MacroDef.Text) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Jar void setWhenmanifestonly(org.apache.tools.ant.taskdefs.Zip.WhenEmpty) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.ExecuteOn.FileDirBoth DIR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Tar OMIT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Manifest.Section void merge(org.apache.tools.ant.taskdefs.Manifest.Section) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Rmic org.apache.tools.ant.types.Path createExtdirs()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.SignJar ERROR_TOO_MANY_MAPPERS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Sync.MyCopy java.util.Map scan(org.apache.tools.ant.types.Resource[], java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.DefBase void setLoaderRef(org.apache.tools.ant.types.Reference) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Property void loadEnvironment(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Javadoc org.apache.tools.ant.types.Commandline.Argument createArg()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Zip.WhenEmpty java.lang.String[] getValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Javac org.apache.tools.ant.taskdefs.Javac.ImplementationSpecificArgument createCompilerArg()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Rmic void setCompiler(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.CopyPath ERROR_NO_DESTDIR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.apache.tools.ant.taskdefs.Available org.apache.tools.ant.types.Path createClasspath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.tools.ant.taskdefs.Manifest ATTRIBUTE_MANIFEST_VERSION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
