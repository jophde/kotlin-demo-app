<root>
    <item name='org.apache.commons.io.filefilter.PrefixFileFilter PrefixFileFilter(java.lang.String[], org.apache.commons.io.IOCase) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter suffixFileFilter(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.SuffixFileFilter SuffixFileFilter(java.lang.String[], org.apache.commons.io.IOCase) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter falseFileFilter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.DirectoryFileFilter DIRECTORY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(java.lang.String, long) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.AbstractFileFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils java.util.List&lt;org.apache.commons.io.filefilter.IOFileFilter&gt; toList(org.apache.commons.io.filefilter.IOFileFilter...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.WildcardFileFilter WildcardFileFilter(java.lang.String, org.apache.commons.io.IOCase) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.WildcardFileFilter WildcardFileFilter(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.MagicNumberFileFilter MagicNumberFileFilter(java.lang.String, long) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.OrFileFilter OrFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.WildcardFilter WildcardFilter(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.WildcardFileFilter WildcardFileFilter(java.lang.String[], org.apache.commons.io.IOCase) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter asFileFilter(java.io.FilenameFilter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils java.util.List&lt;java.io.File&gt; filterList(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable&lt;java.io.File&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.PrefixFileFilter PrefixFileFilter(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.RegexFileFilter RegexFileFilter(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter andFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.SuffixFileFilter SuffixFileFilter(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.SuffixFileFilter SuffixFileFilter(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter sizeFileFilter(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.CanReadFileFilter CAN_READ'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.io.File, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.TrueFileFilter TRUE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter asFileFilter(java.io.FileFilter)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(byte[], long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.SuffixFileFilter SuffixFileFilter(java.lang.String, org.apache.commons.io.IOCase) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils java.util.Set&lt;java.io.File&gt; filterSet(org.apache.commons.io.filefilter.IOFileFilter, java.io.File...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter sizeFileFilter(long, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.PrefixFileFilter PrefixFileFilter(java.util.List&lt;java.lang.String&gt;, org.apache.commons.io.IOCase) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.DelegateFileFilter DelegateFileFilter(java.io.FileFilter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.EmptyFileFilter NOT_EMPTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.RegexFileFilter RegexFileFilter(java.util.regex.Pattern) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.TrueFileFilter INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String, org.apache.commons.io.IOCase)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.AgeFileFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FalseFileFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.commons.io.filefilter.PrefixFileFilter PrefixFileFilter(java.util.List&lt;java.lang.String&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.AndFileFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.commons.io.filefilter.HiddenFileFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter makeFileOnly(org.apache.commons.io.filefilter.IOFileFilter)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.CanWriteFileFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.DelegateFileFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.commons.io.filefilter.EmptyFileFilter EMPTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.MagicNumberFileFilter MagicNumberFileFilter(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.util.Date) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.CanReadFileFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.NotFileFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter, java.io.File...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFileFilter FILE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.PrefixFileFilter PrefixFileFilter(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.TrueFileFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.commons.io.filefilter.WildcardFilter WildcardFilter(java.util.List&lt;java.lang.String&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(long, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String, org.apache.commons.io.IOCase) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.OrFileFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.commons.io.filefilter.AgeFileFilter AgeFileFilter(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.OrFileFilter OrFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FalseFileFilter INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(byte[], long) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(java.lang.String, long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.AgeFileFilter AgeFileFilter(java.util.Date) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter andFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter suffixFileFilter(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils java.util.Set&lt;java.io.File&gt; filterSet(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable&lt;java.io.File&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.CanReadFileFilter CANNOT_READ'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.CanWriteFileFilter CANNOT_WRITE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.IOFileFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.commons.io.filefilter.SizeFileFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter sizeRangeFileFilter(long, long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.AndFileFilter AndFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FalseFileFilter FALSE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.WildcardFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.MagicNumberFileFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFileFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter fileFileFilter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.CanWriteFileFilter CAN_WRITE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils java.util.Set&lt;java.io.File&gt; filterSet(org.apache.commons.io.filefilter.IOFileFilter, java.io.File...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.NameFileFilter NameFileFilter(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.io.File, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.NameFileFilter NameFileFilter(java.lang.String, org.apache.commons.io.IOCase) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.NameFileFilter NameFileFilter(java.lang.String[], org.apache.commons.io.IOCase) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter orFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.AndFileFilter AndFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.util.Date)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.NameFileFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.SuffixFileFilter SuffixFileFilter(java.util.List&lt;java.lang.String&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.WildcardFileFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.CanReadFileFilter READ_ONLY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.AgeFileFilter AgeFileFilter(java.util.Date, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils java.util.List&lt;java.io.File&gt; filterList(org.apache.commons.io.filefilter.IOFileFilter, java.io.File...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.util.Date, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter suffixFileFilter(java.lang.String, org.apache.commons.io.IOCase) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.DirectoryFileFilter INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter asFileFilter(java.io.FileFilter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.DelegateFileFilter DelegateFileFilter(java.io.FilenameFilter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.DirectoryFileFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.WildcardFileFilter WildcardFileFilter(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter directoryFileFilter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.WildcardFilter WildcardFilter(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.SuffixFileFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.NameFileFilter NameFileFilter(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.NotFileFilter NotFileFilter(org.apache.commons.io.filefilter.IOFileFilter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.NameFileFilter NameFileFilter(java.util.List&lt;java.lang.String&gt;, org.apache.commons.io.IOCase) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.RegexFileFilter RegexFileFilter(java.lang.String, org.apache.commons.io.IOCase) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String, org.apache.commons.io.IOCase) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.AgeFileFilter AgeFileFilter(java.io.File, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.io.File)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter orFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.HiddenFileFilter HIDDEN'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.WildcardFileFilter WildcardFileFilter(java.util.List&lt;java.lang.String&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.PrefixFileFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils java.util.List&lt;org.apache.commons.io.filefilter.IOFileFilter&gt; toList(org.apache.commons.io.filefilter.IOFileFilter...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.HiddenFileFilter VISIBLE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.MagicNumberFileFilter MagicNumberFileFilter(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.SuffixFileFilter SuffixFileFilter(java.util.List&lt;java.lang.String&gt;, org.apache.commons.io.IOCase) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.RegexFileFilter RegexFileFilter(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.EmptyFileFilter boolean accept(java.io.File) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter trueFileFilter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.PrefixFileFilter PrefixFileFilter(java.lang.String, org.apache.commons.io.IOCase) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter andFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.NameFileFilter NameFileFilter(java.util.List&lt;java.lang.String&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.util.Date, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.WildcardFileFilter WildcardFileFilter(java.util.List&lt;java.lang.String&gt;, org.apache.commons.io.IOCase) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter suffixFileFilter(java.lang.String, org.apache.commons.io.IOCase)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter orFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String, org.apache.commons.io.IOCase)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.MagicNumberFileFilter MagicNumberFileFilter(byte[], long) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable&lt;java.io.File&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter asFileFilter(java.io.FilenameFilter)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.io.filefilter.FileFilterUtils org.apache.commons.io.filefilter.IOFileFilter makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
