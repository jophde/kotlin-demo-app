<root>
    <item
        name='com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker boolean canConvert(java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.thoughtworks.xstream.core.util.Base64Encoder java.lang.String encode(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.WeakCache java.lang.ref.Reference createReference(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.CustomObjectInputStream.StreamCallback java.util.Map readFieldsFromStream()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.CustomObjectOutputStream com.thoughtworks.xstream.core.util.CustomObjectOutputStream getInstance(com.thoughtworks.xstream.converters.DataHolder, com.thoughtworks.xstream.core.util.CustomObjectOutputStream.StreamCallback) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.thoughtworks.xstream.core.util.CustomObjectInputStream int read(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.thoughtworks.xstream.core.util.OrderRetainingMap void putAll(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.thoughtworks.xstream.core.util.WeakCache java.util.Set entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.Fields java.lang.reflect.Field find(java.lang.Class, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.CustomObjectInputStream com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder, com.thoughtworks.xstream.core.util.CustomObjectInputStream.StreamCallback)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.CustomObjectInputStream com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder, com.thoughtworks.xstream.core.util.CustomObjectInputStream.StreamCallback, java.lang.ClassLoader)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.CustomObjectInputStream java.io.ObjectInputStream.GetField readFields()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.CustomObjectInputStream void readFully(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.CustomObjectOutputStream com.thoughtworks.xstream.core.util.CustomObjectOutputStream getInstance(com.thoughtworks.xstream.converters.DataHolder, com.thoughtworks.xstream.core.util.CustomObjectOutputStream.StreamCallback)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.thoughtworks.xstream.core.util.PresortedMap java.util.Comparator comparator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.thoughtworks.xstream.core.util.Base64Encoder byte[] decode(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker void marshal(java.lang.Object, com.thoughtworks.xstream.io.HierarchicalStreamWriter, com.thoughtworks.xstream.converters.MarshallingContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker void marshal(java.lang.Object, com.thoughtworks.xstream.io.HierarchicalStreamWriter, com.thoughtworks.xstream.converters.MarshallingContext) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.thoughtworks.xstream.core.util.PresortedMap void putAll(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.thoughtworks.xstream.core.util.PrioritizedList java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.CustomObjectInputStream com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder, com.thoughtworks.xstream.core.util.CustomObjectInputStream.StreamCallback, com.thoughtworks.xstream.core.ClassLoaderReference)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.OrderRetainingMap OrderRetainingMap(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader, com.thoughtworks.xstream.converters.UnmarshallingContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.CustomObjectOutputStream void writeChars(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.HierarchicalStreams java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader, com.thoughtworks.xstream.mapper.Mapper) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.Fields void write(java.lang.reflect.Field, java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.CustomObjectOutputStream.StreamCallback void writeFieldsToStream(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.thoughtworks.xstream.core.util.PresortedMap java.util.Collection values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.CustomObjectOutputStream java.io.ObjectOutputStream.PutField putFields()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.Fields java.lang.reflect.Field find(java.lang.Class, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.thoughtworks.xstream.core.util.Pool.Factory java.lang.Object newInstance()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.CustomObjectInputStream com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder, com.thoughtworks.xstream.core.util.CustomObjectInputStream.StreamCallback, com.thoughtworks.xstream.core.ClassLoaderReference) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.CustomObjectInputStream com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder, com.thoughtworks.xstream.core.util.CustomObjectInputStream.StreamCallback, java.lang.ClassLoader) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.thoughtworks.xstream.core.util.QuickWriter void write(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.thoughtworks.xstream.core.util.PresortedMap java.util.Set keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.Fields java.lang.Object read(java.lang.reflect.Field, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker void marshal(java.lang.Object, com.thoughtworks.xstream.io.HierarchicalStreamWriter, com.thoughtworks.xstream.converters.MarshallingContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.thoughtworks.xstream.core.util.WeakCache java.util.Collection values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.thoughtworks.xstream.core.util.QuickWriter void write(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader, com.thoughtworks.xstream.converters.UnmarshallingContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.CustomObjectInputStream com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder, com.thoughtworks.xstream.core.util.CustomObjectInputStream.StreamCallback) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='com.thoughtworks.xstream.core.util.HierarchicalStreams java.lang.String readClassAttribute(com.thoughtworks.xstream.io.HierarchicalStreamReader, com.thoughtworks.xstream.mapper.Mapper) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
