<root>
    <item name='groovy.json.internal.FastStringUtils.StringImplementation DIRECT_CHARS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addJsonFieldName(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner char[][] splitByCharsNoneEmpty(char[], char...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.BaseJsonParser boolean hasEscapeChar(char[], int, int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Exceptions java.lang.String toString(java.lang.Exception)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf add(byte)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] add(char[]...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner char[][] splitByCharsNoneEmpty(char[], char...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharScanner java.lang.String errorDetails(java.lang.String, char[], int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Type INTEGER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner char[] readNumber(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addInt(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf add(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] copy(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addLine(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addFloat(float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf add(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.FastStringUtils.StringImplementation java.lang.String noCopyStringFromChars(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='groovy.json.internal.NumberValue T toEnum(java.lang.Class&lt;T&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CacheType LRU'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] add(char[], char[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.BaseJsonParser java.lang.Object parse(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addLine(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] add(char[], java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharScanner java.lang.String errorDetails(java.lang.String, char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Exceptions java.lang.String toString(java.lang.Exception) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addJsonFieldName(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.LazyMap V[] grow(V[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.BaseJsonParser boolean hasEscapeChar(char[], int, int[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf createExact(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] add(char[], char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf add(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addChar(byte)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf java.lang.String toStringAndRecycle()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Type MAP'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr boolean in(char, int, char[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner char[][] splitByChars(char[], char...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner int skipWhiteSpace(char[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner long parseLongFromTo(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Exceptions java.lang.String sputs(java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.FastStringUtils.StringImplementation char[] toCharArray(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='groovy.json.internal.CharSequenceValue T toEnum(java.lang.Class&lt;T&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] add(char[], java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addString(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner boolean isDigits(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner char[][] splitByChars(char[], char...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] add(char[], java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addJsonEscapedString(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Type FALSE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner char[][] splitByCharsNoneEmpty(char[], char...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf add(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addChar(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Value java.lang.String stringValueEncoded()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='groovy.json.internal.Chr void _idx(char[], int, byte[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] add(char[], java.lang.StringBuilder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf add(double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.JsonStringDecoder java.lang.String decode(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Exceptions java.lang.String sputs(java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner char[][] splitExact(char[], int, char...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Value T toEnum(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovy.json.internal.CharScanner java.lang.String errorDetails(java.lang.String, char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharScanner java.math.BigDecimal parseBigDecimal(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.FastStringUtils char[] toCharArray(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addBoolean(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharSequenceValue java.math.BigDecimal bigDecimalValue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharSequenceValue T toEnum(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='groovy.json.internal.Type STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.JsonParserCharArray java.lang.String exceptionDetails(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] add(char[], java.lang.StringBuilder) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf add(short)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] chars(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Type TRUE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addBigDecimal(java.math.BigDecimal)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf CharBuf(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner boolean isInteger(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf decodeJsonString(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.NumberValue java.util.Date dateValue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.ByteScanner void encodeByteIntoTwoAsciiCharBytes(int, byte[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner char[][] splitByChars(char[], char...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner char[][] compact(char[][])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf decodeJsonString(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf create(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharScanner java.math.BigDecimal parseBigDecimal(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf java.lang.CharSequence subSequence(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner int skipWhiteSpaceFast(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner char[] readNumber(char[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addLong(java.lang.Long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf void write(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf add(float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner java.lang.Number parseJsonNumber(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addBigInteger(java.math.BigInteger)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.JsonParserUsingCharacterSource java.lang.Object decodeJsonObject()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.Exceptions java.lang.String sputs(groovy.json.internal.CharBuf, java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.NumberValue java.math.BigDecimal bigDecimalValue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.ArrayUtils char[] copyRange(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner java.math.BigDecimal parseBigDecimal(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.ValueContainer NULL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] grow(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addQuoted(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.JsonParserCharArray java.util.List decodeJsonArray()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] add(char[], char) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf add(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner char[][] splitExact(char[], char, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addQuoted(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharScanner char[][] splitByCharsNoneEmpty(char[], int, int, char...) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addChars(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] lpad(char[], int, char) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Type DOUBLE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.ReaderCharacterSource java.lang.String errorDetails(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner int parseIntFromToIgnoreDot(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner char[] readNumber(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner boolean hasDecimalChar(char[], boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] grow(char[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.JsonParserLax java.lang.Object decodeFromChars(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf add(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.JsonParserUsingCharacterSource java.lang.Object parse(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='groovy.json.internal.Chr boolean in(char, char[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf create(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharacterSource java.lang.String errorDetails(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='groovy.json.internal.CharScanner float parseFloat(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner long parseLong(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner boolean isLong(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addLine(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.FastStringUtils.StringImplementation UNKNOWN'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.NumberValue T toEnum(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addChar(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr void _idx(char[], int, char[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Type NULL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addLine(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.JsonStringDecoder java.lang.String decodeForSure(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharScanner char[][] splitByCharsFromToDelims(char[], int, int, char...) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Type LIST'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf add(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner double parseDouble(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.ValueContainer T toEnum(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='groovy.json.internal.CharacterSource java.lang.String errorDetails(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='groovy.json.internal.Byt void charTo(byte[], char) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharScanner java.lang.Number parseJsonNumber(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner char[][] split(char[], char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.ValueContainer TRUE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf add(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CacheType LFU'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.BaseJsonParser int findEndQuote(char[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner boolean isLong(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.JsonParserUsingCharacterSource java.util.List decodeJsonArray()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.ValueContainer java.lang.CharSequence subSequence(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.JsonFastParser groovy.json.internal.Value decodeJsonObjectLazyFinalParse()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.JsonParserCharArray java.lang.Object decodeJsonObject()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.IO groovy.json.internal.CharBuf read(java.io.Reader, groovy.json.internal.CharBuf, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addJsonEscapedString(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addShort(short)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.LazyMap groovy.json.internal.LazyMap clearAndCopy()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharScanner java.lang.Number parseJsonNumber(char[], int, int, int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner char[] readNumber(char[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.Exceptions.JsonInternalException void printStackTrace(java.io.PrintWriter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addJsonEscapedString(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner double parseDouble(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner char[][] splitExact(char[], int, char...) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr boolean in(int, char[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner char[][] split(char[], char) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharScanner char[][] splitByCharsFromToDelims(char[], int, int, char...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf add(char[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.NumberValue java.math.BigInteger bigIntegerValue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CacheType FIFO'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addChar(short)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.Exceptions.JsonInternalException void printStackTrace(java.io.PrintStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.JsonParserCharArray java.lang.Object parse(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner long parseLongFromToIgnoreDot(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addChars(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addDouble(double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.FastStringUtils.StringImplementation OFFSET'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner char[][] compact(char[][]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharSequenceValue java.lang.CharSequence subSequence(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] grow(char[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner int skipWhiteSpaceFast(char[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] copy(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner char[][] splitExact(char[], int, char...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.ValueContainer FALSE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf decodeJsonString(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addDouble(java.lang.Double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] add(char[], java.lang.StringBuilder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.JsonFastParser java.lang.Object decodeFromChars(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf add(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.JsonParserCharArray java.lang.String exceptionDetails(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner int parseInt(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addJsonFieldName(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.JsonParserLax groovy.json.internal.Value decodeNumberLax(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addInt(java.lang.Integer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharSequenceValue java.math.BigInteger bigIntegerValue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.JsonParserCharArray java.lang.Object decodeFromChars(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] add(char[], char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf add(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharScanner char[][] splitByCharsNoneEmpty(char[], int, int, char...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner boolean isInteger(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] add(char[], char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addFloat(java.lang.Float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] lpad(char[], int, char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.Exceptions java.lang.String sputs(groovy.json.internal.CharBuf, java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.SimpleCache SimpleCache(int, groovy.json.internal.CacheType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf create(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] copy(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addByte(byte)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner char[][] splitExact(char[], char, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.Chr char[] grow(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addQuoted(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.ArrayUtils char[] copyRange(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharSequenceValue java.lang.String stringValueEncoded()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.ReaderCharacterSource java.lang.String errorDetails(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharBuf groovy.json.internal.CharBuf addLong(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='groovy.json.internal.CharScanner java.math.BigDecimal parseBigDecimal(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='groovy.json.internal.Exceptions java.lang.String sputs(groovy.json.internal.CharBuf, java.lang.Object...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
