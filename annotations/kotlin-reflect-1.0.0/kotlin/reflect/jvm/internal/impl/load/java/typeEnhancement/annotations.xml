<root>
    <item name='kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeEnhancementKt kotlin.reflect.jvm.internal.impl.types.KotlinType enhance(kotlin.reflect.jvm.internal.impl.types.KotlinType, kotlin.jvm.functions.Function1&lt;? super java.lang.Integer,kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.JavaTypeQualifiers&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeQualifiersKt kotlin.jvm.functions.Function1&lt;java.lang.Integer,kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.JavaTypeQualifiers&gt; computeIndexedQualifiersForOverride(kotlin.reflect.jvm.internal.impl.types.KotlinType, java.util.Collection&lt;? extends kotlin.reflect.jvm.internal.impl.types.KotlinType&gt;, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.NullabilityQualifier NOT_NULL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.JavaTypeQualifiers.Companion kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.JavaTypeQualifiers getNONE()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeQualifiersKt kotlin.jvm.functions.Function1&lt;java.lang.Integer,kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.JavaTypeQualifiers&gt; computeIndexedQualifiersForOverride(kotlin.reflect.jvm.internal.impl.types.KotlinType, java.util.Collection&lt;? extends kotlin.reflect.jvm.internal.impl.types.KotlinType&gt;, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeQualifiersKt kotlin.jvm.functions.Function1&lt;java.lang.Integer,kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.JavaTypeQualifiers&gt; computeIndexedQualifiersForOverride(kotlin.reflect.jvm.internal.impl.types.KotlinType, java.util.Collection&lt;? extends kotlin.reflect.jvm.internal.impl.types.KotlinType&gt;, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.MutabilityQualifier READ_ONLY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeEnhancementKt kotlin.reflect.jvm.internal.impl.types.KotlinType enhance(kotlin.reflect.jvm.internal.impl.types.KotlinType, kotlin.jvm.functions.Function1&lt;? super java.lang.Integer,kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.JavaTypeQualifiers&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.MutabilityQualifier MUTABLE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.NullabilityQualifier NULLABLE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.JavaTypeQualifiers kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.JavaTypeQualifiers access$getNONE$cp()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.SignatureEnhancementKt java.util.Collection&lt;D&gt; enhanceSignatures(java.util.Collection&lt;? extends D&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.SignatureEnhancementKt java.util.Collection&lt;D&gt; enhanceSignatures(java.util.Collection&lt;? extends D&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.JavaTypeQualifiers Companion'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeEnhancementKt kotlin.reflect.jvm.internal.impl.types.KotlinType enhance(kotlin.reflect.jvm.internal.impl.types.KotlinType, kotlin.jvm.functions.Function1&lt;? super java.lang.Integer,kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.JavaTypeQualifiers&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
