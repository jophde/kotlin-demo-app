<root>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitFieldExpression(org.codehaus.groovy.ast.expr.FieldExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitAnnotations(org.codehaus.groovy.ast.AnnotatedNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassHelper org.codehaus.groovy.ast.ClassNode makeWithoutCaching(java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.MixinNode EMPTY_ARRAY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode java.util.List&lt;org.codehaus.groovy.ast.AnnotationNode&gt; getAnnotations(org.codehaus.groovy.ast.ClassNode)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper Iterator_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitSpreadExpression(org.codehaus.groovy.ast.expr.SpreadExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitUnaryPlusExpression(org.codehaus.groovy.ast.expr.UnaryPlusExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper CLASS_Type'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.VariableScope void putDeclaredVariable(org.codehaus.groovy.ast.Variable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper Annotation_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassNode EMPTY_ARRAY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitShortTernaryExpression(org.codehaus.groovy.ast.expr.ElvisOperatorExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitRangeExpression(org.codehaus.groovy.ast.expr.RangeExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper long_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitStatement(org.codehaus.groovy.ast.stmt.Statement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitExpressionStatement(org.codehaus.groovy.ast.stmt.ExpressionStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper Float_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper int_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.MethodNode SCRIPT_BODY_METHOD_KEY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.MixinASTTransformation void visit(org.codehaus.groovy.ast.ASTNode[], org.codehaus.groovy.control.SourceUnit) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CompileUnit void addGeneratedInnerClass(org.codehaus.groovy.ast.InnerClassNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitStaticMethodCallExpression(org.codehaus.groovy.ast.expr.StaticMethodCallExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ModuleNode java.util.List&lt;org.codehaus.groovy.ast.ImportNode&gt; getImports()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper GSTRING_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper boolean_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitTupleExpression(org.codehaus.groovy.ast.expr.TupleExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitClass(org.codehaus.groovy.ast.ClassNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper METACLASS_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.AnnotationNode java.lang.String targetToName(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitCaseStatement(org.codehaus.groovy.ast.stmt.CaseStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyClassVisitor void visitMethod(org.codehaus.groovy.ast.MethodNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.MethodNode void setVariableScope(org.codehaus.groovy.ast.VariableScope) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitContinueStatement(org.codehaus.groovy.ast.stmt.ContinueStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassHelper boolean isSAMType(org.codehaus.groovy.ast.ClassNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode void addMethod(org.codehaus.groovy.ast.MethodNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitProperty(org.codehaus.groovy.ast.PropertyNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper CLOSURE_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassHelper org.codehaus.groovy.ast.ClassNode makeWithoutCaching(java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.MixinASTTransformation void visit(org.codehaus.groovy.ast.ASTNode[], org.codehaus.groovy.control.SourceUnit) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitBooleanExpression(org.codehaus.groovy.ast.expr.BooleanExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitObjectInitializerStatements(org.codehaus.groovy.ast.ClassNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper ELEMENT_TYPE_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper byte_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.InnerClassNode org.codehaus.groovy.ast.ConstructorNode addConstructor(int, org.codehaus.groovy.ast.Parameter[], org.codehaus.groovy.ast.ClassNode[], org.codehaus.groovy.ast.stmt.Statement) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeExpressionTransformer void visitCaseStatement(org.codehaus.groovy.ast.stmt.CaseStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitNotExpression(org.codehaus.groovy.ast.expr.NotExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitAssertStatement(org.codehaus.groovy.ast.stmt.AssertStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper REFERENCE_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeExpressionTransformer void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.EnumConstantClassNode EnumConstantClassNode(org.codehaus.groovy.ast.ClassNode, java.lang.String, int, org.codehaus.groovy.ast.ClassNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode org.codehaus.groovy.ast.ClassNode getPlainNodeReference()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper GROOVY_OBJECT_SUPPORT_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ModuleNode void visit(org.codehaus.groovy.ast.GroovyCodeVisitor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper BigDecimal_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitArrayExpression(org.codehaus.groovy.ast.expr.ArrayExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper Enum_Type'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.InnerClassNode InnerClassNode(org.codehaus.groovy.ast.ClassNode, java.lang.String, int, org.codehaus.groovy.ast.ClassNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.codehaus.groovy.ast.Variable org.codehaus.groovy.ast.ClassNode getType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ASTNode void setNodeMetaData(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitBreakStatement(org.codehaus.groovy.ast.stmt.BreakStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitWhileLoop(org.codehaus.groovy.ast.stmt.WhileStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeExpressionTransformer void visitDoWhileLoop(org.codehaus.groovy.ast.stmt.DoWhileStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitAssertStatement(org.codehaus.groovy.ast.stmt.AssertStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassHelper org.codehaus.groovy.ast.ClassNode getNextSuperClass(org.codehaus.groovy.ast.ClassNode, org.codehaus.groovy.ast.ClassNode) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeExpressionTransformer void visitAnnotations(org.codehaus.groovy.ast.AnnotatedNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.VariableScope org.codehaus.groovy.ast.VariableScope copy()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper BINDING_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CompileUnit java.util.List&lt;org.codehaus.groovy.ast.ModuleNode&gt; getModules()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitContinueStatement(org.codehaus.groovy.ast.stmt.ContinueStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyClassVisitor void visitConstructor(org.codehaus.groovy.ast.ConstructorNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.codehaus.groovy.ast.CompileUnit java.util.List getClasses()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassNode THIS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode void addField(org.codehaus.groovy.ast.FieldNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitConstantExpression(org.codehaus.groovy.ast.expr.ConstantExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitUnaryMinusExpression(org.codehaus.groovy.ast.expr.UnaryMinusExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GenericsType GenericsType(org.codehaus.groovy.ast.ClassNode, org.codehaus.groovy.ast.ClassNode[], org.codehaus.groovy.ast.ClassNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper Byte_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper DYNAMIC_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitMethodPointerExpression(org.codehaus.groovy.ast.expr.MethodPointerExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassHelper org.codehaus.groovy.ast.ClassNode makeWithoutCaching(java.lang.Class, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitListExpression(org.codehaus.groovy.ast.expr.ListExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyClassVisitor void visitProperty(org.codehaus.groovy.ast.PropertyNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ModuleNode org.codehaus.groovy.ast.ClassNode createStatementsClass()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.AnnotatedNode java.util.List&lt;org.codehaus.groovy.ast.AnnotationNode&gt; getAnnotations()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassHelper org.codehaus.groovy.ast.ClassNode getNextSuperClass(org.codehaus.groovy.ast.ClassNode, org.codehaus.groovy.ast.ClassNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CompileUnit void addClassNodeToCompile(org.codehaus.groovy.ast.ClassNode, org.codehaus.groovy.control.SourceUnit) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitBitwiseNegationExpression(org.codehaus.groovy.ast.expr.BitwiseNegationExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper Number_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper double_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassNode SUPER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.Variable org.codehaus.groovy.ast.ClassNode getOriginType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.AnnotatedNode void addAnnotations(java.util.List&lt;org.codehaus.groovy.ast.AnnotationNode&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitAttributeExpression(org.codehaus.groovy.ast.expr.AttributeExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.VariableScope void putReferencedLocalVariable(org.codehaus.groovy.ast.Variable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.InnerClassNode void addConstructor(org.codehaus.groovy.ast.ConstructorNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeExpressionTransformer void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyClassVisitor void visitClass(org.codehaus.groovy.ast.ClassNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper LIST_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitPrefixExpression(org.codehaus.groovy.ast.expr.PrefixExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper Double_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitClosureListExpression(org.codehaus.groovy.ast.expr.ClosureListExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeExpressionTransformer org.codehaus.groovy.ast.expr.Expression transform(org.codehaus.groovy.ast.expr.Expression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitDoWhileLoop(org.codehaus.groovy.ast.stmt.DoWhileStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ConstructorNode ConstructorNode(int, org.codehaus.groovy.ast.Parameter[], org.codehaus.groovy.ast.ClassNode[], org.codehaus.groovy.ast.stmt.Statement) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.FieldNode org.codehaus.groovy.ast.FieldNode newStatic(java.lang.Class, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode java.util.List&lt;org.codehaus.groovy.ast.MethodNode&gt; getAllDeclaredMethods()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode java.util.List&lt;org.codehaus.groovy.ast.ConstructorNode&gt; getDeclaredConstructors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper BigInteger_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.AnnotatedNode java.util.List&lt;org.codehaus.groovy.ast.AnnotationNode&gt; getAnnotations(org.codehaus.groovy.ast.ClassNode)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper void_WRAPPER_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitReturnStatement(org.codehaus.groovy.ast.stmt.ReturnStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeExpressionTransformer void visitField(org.codehaus.groovy.ast.FieldNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode void removeMethod(org.codehaus.groovy.ast.MethodNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitField(org.codehaus.groovy.ast.FieldNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.InnerClassNode InnerClassNode(org.codehaus.groovy.ast.ClassNode, java.lang.String, int, org.codehaus.groovy.ast.ClassNode, org.codehaus.groovy.ast.ClassNode[], org.codehaus.groovy.ast.MixinNode[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode boolean parametersEqual(org.codehaus.groovy.ast.Parameter[], org.codehaus.groovy.ast.Parameter[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GenericsType GenericsType(org.codehaus.groovy.ast.ClassNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassHelper org.codehaus.groovy.ast.ClassNode makeReference()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.GenericsType EMPTY_ARRAY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper MAP_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitArrayExpression(org.codehaus.groovy.ast.expr.ArrayExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.codehaus.groovy.ast.ClassNode ClassNode(java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeExpressionTransformer void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitSpreadMapExpression(org.codehaus.groovy.ast.expr.SpreadMapExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitDoWhileLoop(org.codehaus.groovy.ast.stmt.DoWhileStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode java.util.List&lt;org.codehaus.groovy.ast.MethodNode&gt; getDeclaredMethods(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitConstructor(org.codehaus.groovy.ast.ConstructorNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ASTNode java.lang.Object putNodeMetaData(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper PATTERN_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode boolean parametersEqual(org.codehaus.groovy.ast.Parameter[], org.codehaus.groovy.ast.Parameter[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitFieldExpression(org.codehaus.groovy.ast.expr.FieldExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode org.codehaus.groovy.ast.FieldNode addFieldFirst(java.lang.String, int, org.codehaus.groovy.ast.ClassNode, org.codehaus.groovy.ast.expr.Expression)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitRangeExpression(org.codehaus.groovy.ast.expr.RangeExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitUnaryPlusExpression(org.codehaus.groovy.ast.expr.UnaryPlusExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode boolean isDerivedFrom(org.codehaus.groovy.ast.ClassNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitReturnStatement(org.codehaus.groovy.ast.stmt.ReturnStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitExpressionStatement(org.codehaus.groovy.ast.stmt.ExpressionStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassHelper org.codehaus.groovy.ast.MethodNode findSAM(org.codehaus.groovy.ast.ClassNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode java.util.List&lt;org.codehaus.groovy.ast.MethodNode&gt; getMethods()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode org.codehaus.groovy.ast.ConstructorNode addConstructor(int, org.codehaus.groovy.ast.Parameter[], org.codehaus.groovy.ast.ClassNode[], org.codehaus.groovy.ast.stmt.Statement)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitShortTernaryExpression(org.codehaus.groovy.ast.expr.ElvisOperatorExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper Integer_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode void addConstructor(org.codehaus.groovy.ast.ConstructorNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitTupleExpression(org.codehaus.groovy.ast.expr.TupleExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper OBJECT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitCaseStatement(org.codehaus.groovy.ast.stmt.CaseStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassHelper org.codehaus.groovy.ast.ClassNode makeWithoutCaching(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitStaticMethodCallExpression(org.codehaus.groovy.ast.expr.StaticMethodCallExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode org.codehaus.groovy.ast.MethodNode addSyntheticMethod(java.lang.String, int, org.codehaus.groovy.ast.ClassNode, org.codehaus.groovy.ast.Parameter[], org.codehaus.groovy.ast.ClassNode[], org.codehaus.groovy.ast.stmt.Statement)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode java.util.List&lt;org.codehaus.groovy.ast.AnnotationNode&gt; getAnnotations()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ASTNode void copyNodeMetaData(org.codehaus.groovy.ast.ASTNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode org.codehaus.groovy.ast.ConstructorNode addConstructor(int, org.codehaus.groovy.ast.Parameter[], org.codehaus.groovy.ast.ClassNode[], org.codehaus.groovy.ast.stmt.Statement) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitSpreadExpression(org.codehaus.groovy.ast.expr.SpreadExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper VOID_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitBooleanExpression(org.codehaus.groovy.ast.expr.BooleanExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeExpressionTransformer void visitAssertStatement(org.codehaus.groovy.ast.stmt.AssertStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeExpressionTransformer void visitExpressionStatement(org.codehaus.groovy.ast.stmt.ExpressionStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper Long_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitDoWhileLoop(org.codehaus.groovy.ast.stmt.DoWhileStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper COMPARABLE_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper GENERATED_CLOSURE_Type'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.FieldNode org.codehaus.groovy.ast.FieldNode newStatic(java.lang.Class, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper GROOVY_OBJECT_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitClosureListExpression(org.codehaus.groovy.ast.expr.ClosureListExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitArgumentlistExpression(org.codehaus.groovy.ast.expr.ArgumentListExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode void addTransform(java.lang.Class&lt;? extends org.codehaus.groovy.transform.ASTTransformation&gt;, org.codehaus.groovy.ast.ASTNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.PackageNode void visit(org.codehaus.groovy.ast.GroovyCodeVisitor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitReturnStatement(org.codehaus.groovy.ast.stmt.ReturnStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper short_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassHelper org.codehaus.groovy.ast.ClassNode[] make(java.lang.Class[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode java.util.List&lt;org.codehaus.groovy.ast.PropertyNode&gt; getProperties()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitClassExpression(org.codehaus.groovy.ast.expr.ClassExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitCaseStatement(org.codehaus.groovy.ast.stmt.CaseStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper GROOVY_INTERCEPTABLE_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode org.codehaus.groovy.ast.FieldNode addField(java.lang.String, int, org.codehaus.groovy.ast.ClassNode, org.codehaus.groovy.ast.expr.Expression)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ASTNode void removeNodeMetaData(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeExpressionTransformer void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper STRING_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitSpreadMapExpression(org.codehaus.groovy.ast.expr.SpreadMapExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitPrefixExpression(org.codehaus.groovy.ast.expr.PrefixExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.InterfaceHelperClassNode InterfaceHelperClassNode(org.codehaus.groovy.ast.ClassNode, java.lang.String, int, org.codehaus.groovy.ast.ClassNode, java.util.List&lt;java.lang.String&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyClassVisitor void visitField(org.codehaus.groovy.ast.FieldNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitPostfixExpression(org.codehaus.groovy.ast.expr.PostfixExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.DynamicVariable org.codehaus.groovy.ast.ClassNode getOriginType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode java.util.List&lt;org.codehaus.groovy.ast.FieldNode&gt; getFields()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeExpressionTransformer void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitBitwiseNegationExpression(org.codehaus.groovy.ast.expr.BitwiseNegationExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitWhileLoop(org.codehaus.groovy.ast.stmt.WhileStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ASTNode void setSourcePosition(org.codehaus.groovy.ast.ASTNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper float_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassHelper org.codehaus.groovy.ast.ClassNode makeWithoutCaching(java.lang.Class, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitContinueStatement(org.codehaus.groovy.ast.stmt.ContinueStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ASTNode void visit(org.codehaus.groovy.ast.GroovyCodeVisitor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitAttributeExpression(org.codehaus.groovy.ast.expr.AttributeExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitBytecodeExpression(org.codehaus.groovy.classgen.BytecodeExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode void addProperty(org.codehaus.groovy.ast.PropertyNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void addError(java.lang.String, org.codehaus.groovy.ast.ASTNode) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper Boolean_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper Short_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitListExpression(org.codehaus.groovy.ast.expr.ListExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper RANGE_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassHelper org.codehaus.groovy.ast.ClassNode[] make(java.lang.Class[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitGStringExpression(org.codehaus.groovy.ast.expr.GStringExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.InnerClassNode org.codehaus.groovy.ast.ConstructorNode addConstructor(int, org.codehaus.groovy.ast.Parameter[], org.codehaus.groovy.ast.ClassNode[], org.codehaus.groovy.ast.stmt.Statement)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitMethodPointerExpression(org.codehaus.groovy.ast.expr.MethodPointerExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitGStringExpression(org.codehaus.groovy.ast.expr.GStringExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitBytecodeExpression(org.codehaus.groovy.classgen.BytecodeExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.VariableScope void putReferencedClassVariable(org.codehaus.groovy.ast.Variable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitAssertStatement(org.codehaus.groovy.ast.stmt.AssertStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitPostfixExpression(org.codehaus.groovy.ast.expr.PostfixExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitMethod(org.codehaus.groovy.ast.MethodNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper char_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitBreakStatement(org.codehaus.groovy.ast.stmt.BreakStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.codehaus.groovy.ast.Parameter EMPTY_ARRAY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode org.codehaus.groovy.ast.MethodNode addMethod(java.lang.String, int, org.codehaus.groovy.ast.ClassNode, org.codehaus.groovy.ast.Parameter[], org.codehaus.groovy.ast.ClassNode[], org.codehaus.groovy.ast.stmt.Statement)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeExpressionTransformer void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeExpressionTransformer void visitWhileLoop(org.codehaus.groovy.ast.stmt.WhileStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.DynamicVariable org.codehaus.groovy.ast.ClassNode getType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitArgumentlistExpression(org.codehaus.groovy.ast.expr.ArgumentListExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ModuleNode void addClass(org.codehaus.groovy.ast.ClassNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitClassExpression(org.codehaus.groovy.ast.expr.ClassExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitNotExpression(org.codehaus.groovy.ast.expr.NotExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode java.util.Set&lt;org.codehaus.groovy.ast.ClassNode&gt; getAllInterfaces()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ImportNode void visit(org.codehaus.groovy.ast.GroovyCodeVisitor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode org.codehaus.groovy.ast.PropertyNode addProperty(java.lang.String, int, org.codehaus.groovy.ast.ClassNode, org.codehaus.groovy.ast.expr.Expression, org.codehaus.groovy.ast.stmt.Statement, org.codehaus.groovy.ast.stmt.Statement)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.CodeVisitorSupport void visitConstantExpression(org.codehaus.groovy.ast.expr.ConstantExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitUnaryMinusExpression(org.codehaus.groovy.ast.expr.UnaryMinusExpression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeExpressionTransformer void visitProperty(org.codehaus.groovy.ast.PropertyNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitExpressionStatement(org.codehaus.groovy.ast.stmt.ExpressionStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper Character_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GenericsType boolean isCompatibleWith(org.codehaus.groovy.ast.ClassNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.GroovyCodeVisitor void visitBreakStatement(org.codehaus.groovy.ast.stmt.BreakStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                 val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper OBJECT_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassNode org.codehaus.groovy.ast.ClassNode makeArray()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassNode void addFieldFirst(org.codehaus.groovy.ast.FieldNode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper EMPTY_TYPE_ARRAY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassHelper org.codehaus.groovy.ast.ClassNode makeCached(java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeExpressionTransformer void visitReturnStatement(org.codehaus.groovy.ast.stmt.ReturnStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.codehaus.groovy.ast.ClassHelper SCRIPT_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
        name='org.codehaus.groovy.ast.ClassCodeVisitorSupport void visitWhileLoop(org.codehaus.groovy.ast.stmt.WhileStatement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
